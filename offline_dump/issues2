[{"body": "Thank you very much for making it possible to put the terminal on the right-hand side, this makes using horizontal monitor layout more efficient. For vertical monitors, stacking the terminal and the tabbed area works great, but in my setup it makes more sense to put the terminal on top. It would be great to have that option.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49938"}, {"body": "Fix https://github.com/Microsoft/vscode/issues/49677\r\n\r\nCC: @isidorn", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49936"}, {"body": "hi, it a native way in vscode to add comment link to another method or class.\r\nI want to alt+Click on a comment to bring me to the file.\r\n\r\nexample \r\n```javascript\r\n//file:///C:/Users/jonle/Documents/Games/A%20New%20Fantastic%20Time/js/rpg_scenes.js#methodName\r\nScene_IntroTile.prototype.create = function() {\r\n    console.log('create: ', create);\r\n    //Scene_Base.prototype.create.call(this);\r\n\r\n};\r\n```\r\ni want alt+click bring me to the local file `/js/rpg_scenes.js#methodName`\r\nwhat the good way to do this, any plugin or native way existe ?\r\nThank a lot for help.\r\nI find the way little long to make.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49933"}, {"body": "Not sure if I'm in the right place, but the syntax highlighting for VS Code seems very limited and unconfigurable. Apparently, VS Code uses the syntax highlighting from Atom, yet Atom users tell me it is better for Atom. As I've witnessed with others it makes transitioning from Atom rough, and coming from VS Code, it makes transitioning to Atom kind of tempting. Any improvements in this regard would be very nice.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49932"}, {"body": "\r\n* Install the [Node Pack for Azure extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) \r\n* Reload\r\n* In the Extension Viewlet, click on the `...` menu and choose `Disable all installed extensions`\r\n\r\nResult:\r\n\r\n* For a number of the extensions, I'm prompted to uninstall the dependencies as well (the Azure Account extension, which is a dependency of the App Service extension):\r\n\r\n![image](https://user-images.githubusercontent.com/1487073/39946806-6e85c538-5524-11e8-988c-d597810d718c.png)\r\n\r\n* Once done, I get three errors:\r\n\r\n![image](https://user-images.githubusercontent.com/1487073/39946765-47b38efe-5524-11e8-837f-cce22b556e26.png)\r\n\r\nBut they are actually disabled on reload.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49929"}, {"body": "Issue Type: <b>Bug</b>\r\n\r\nI'm debugging an extension (therefore Node.js) \r\n\r\n1.23.1:\r\n![image](https://user-images.githubusercontent.com/6913354/40075489-41d73a48-5831-11e8-8249-7613993858b6.png)\r\n\r\nInsiders:\r\n![image](https://user-images.githubusercontent.com/6913354/40075264-c6231598-5830-11e8-9082-4bf650883c70.png)\r\n\r\nEasiest to repro:  \r\n1) While debugging Node.js:\r\n2) Type this into debug console:\r\n  {a:{b:\"hi\"}}\r\n3) Try expanding it\r\n!) No additional data shows up\r\n\r\n1.23.1:\r\n![image](https://user-images.githubusercontent.com/6913354/40075709-d3dab1b8-5831-11e8-937b-0dab63313cc1.png)\r\n\r\nInsiders:\r\n![image](https://user-images.githubusercontent.com/6913354/40075612-979d65b0-5831-11e8-9d75-9ae0a888740b.png)\r\n\r\n\r\nVS Code version: Code - Insiders 1.24.0-insider (5d12f53178b72e88431347f8e248c49335a7fefc, 2018-05-14T05:16:26.538Z)\r\nOS version: Windows_NT x64 10.0.16299\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Xeon(R) CPU E31230 @ 3.20GHz (4 x 3193)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: disabled_software<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Memory (System)|15.96GB (5.86GB free)|\r\n|Process Argv|C:\\Program Files\\Microsoft VS Code Insiders\\Code - Insiders.exe C:\\Repos\\vscode-azurearmtools|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (9)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\njson-tree-view|Cha|1.1.0\r\nvscode-markdownlint|Dav|0.16.0\r\ntslint|eg2|1.0.28\r\nvscode-azurestorage|ms-|0.3.1\r\nvscode-cosmosdb|ms-|0.7.1\r\nvscode-language-pack-de|MS-|1.23.2\r\nazure-account|ms-|0.4.0\r\nazurerm-vscode-tools|msa|0.4.1\r\nantlr4|nct|0.0.1\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49927"}, {"body": "Issue Type: <b>Bug</b>\r\n\r\nThe Python extension is giving me a suggestion but doesn't tell me how to do this.  \"Selected interpreter is macOS system Python which is not recommended. Please select different interpreter.\"\r\n\r\nVS Code version: Code 1.23.1 (d0182c3417d225529c6d5ad24b7572815d0de9ac, 2018-05-10T16:03:31.083Z)\r\nOS version: Darwin x64 17.5.0\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-6820HQ CPU @ 2.70GHz (8 x 2700)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: enabled<br>rasterization: enabled<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|2, 2, 2|\r\n|Memory (System)|16.00GB (0.03GB free)|\r\n|Process Argv|/Applications/Visual Studio Code.app/Contents/MacOS/Electron -psn_0_16969774|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (15)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nvscode-docker|Pet|0.0.26\r\nscala|dal|0.0.5\r\nvscode-dash|dee|1.10.0\r\nphp-debug|fel|1.12.3\r\nphp-intellisense|fel|2.3.1\r\ncomposer|ika|0.7.1\r\nmssql|ms-|1.3.1\r\npython|ms-|2018.4.0\r\nazure-account|ms-|0.4.0\r\nteam|ms-|1.133.0\r\ndebugger-for-chrome|msj|4.4.3\r\nlaravel-blade|one|1.18.0\r\nlaravel5-snippets|one|1.4.0\r\nlaravel-helpers|raf|0.2.2\r\nlaravel-artisan|rya|0.0.20\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->\r\n\r\n<img width=\"758\" alt=\"2018-05-15_10-32-52\" src=\"https://user-images.githubusercontent.com/1686187/40073551-ff27dc0c-582b-11e8-8697-ae934f74bfba.png\">\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49926"}, {"body": "Hi there,\r\n\r\nI followed all the steps on the \r\nhttps://github.com/Microsoft/vscode/wiki/How-to-Contribute\r\npage, but everytime I try to start debugging with Launch VS Code oprtion, I get this error message:\r\n![image](https://user-images.githubusercontent.com/19150760/40071015-fcaa8918-586f-11e8-9273-d9a907991ccb.png)\r\nWhat is the problem, what am I doing wrong? Here is the launch configuration:\r\n![image](https://user-images.githubusercontent.com/19150760/40071133-41fc8ac0-5870-11e8-89c2-3c4ac30be236.png)\r\n\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49921"}, {"body": "1. Go offline\r\n2. Open any `tsconfig.json`\r\n3. See the warning (and feel missing validation, descriptions & autocomplete):\r\n```\r\nProblems loading reference 'https://schemastore.azurewebsites.net/schemas/json/tsconfig.json':\r\nUnable to load schema from 'https://schemastore.azurewebsites.net/schemas/json/tsconfig.json': \r\nUnable to connect to https://schemastore.azurewebsites.net/schemas/json/tsconfig.json. \r\nError: getaddrinfo ENOENT schemastore.azurewebsites.net:443\r\n```", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49920"}, {"body": "- VSCode Version: 1.23.1\r\n- OS Version: Windows 10\r\n\r\nSteps to Reproduce:\r\n1. Copy the following code in a .js file\r\n\r\n```js\r\n// Data table\r\n/**\r\n    @typedef DataTableThing\r\n    @type {Thing}\r\n    @property {function(TagCollection, Location, string, string, Infotable):void} AddDataTableEntries - (arg0: tags, arg1: location, arg2: source, arg3: sourceType, arg4: values) Add multiple data table entries.\r\n    @property {function(TagCollection, Location, string, string, Infotable):string} AddDataTableEntry - (arg0: tags, arg1: location, arg2: source, arg3: sourceType, arg4: values) Add a new data table entry.\r\n    @property {function(TagCollection, Location, string, string, Infotable):void} AddOrUpdateDataTableEntries - (arg0: tags, arg1: location, arg2: source, arg3: sourceType, arg4: values) Add or update multiple data table entries.\r\n    @property {function(TagCollection, Location, string, string, Infotable):string} AddOrUpdateDataTableEntry - (arg0: tags, arg1: location, arg2: source, arg3: sourceType, arg4: values)  Add a new data table entry, or if it exists, update an existing entry.\r\n    @property {function(TagCollection, Location, string, string, Infotable):void} AssignDataTableEntries - (arg0: tags, arg1: location, arg2: source, arg3: sourceType, arg4: values) Replaces existing data table entries.\r\n    @property {function():Infotable} CreateValues - Create an empty info table of the correct datashape for this data table.\r\n    @property {function(*):Infotable} CreateValuesWithData - (arg0: values as JSONObject) Create an info table of the correct datashape for this stream and include data values.\r\n    @property {function(Infotable):void} DeleteDataTableEntries - (arg0: values as Infotable) Delete all table entries that match the provided values.\r\n    @property {function(TagCollection, Location, string, string, Infotable, *):void} DeleteDataTableEntriesWithQuery - (arg0: tags, arg1: location, arg2: source, arg3: sourceType, arg4: values, arg5: query as JSONObject) Delete multiple data table entries based on a query.\r\n    @property {function(Infotable):void} DeleteDataTableEntry - (arg0: values as Infotable) Delete an existing data table entry\r\n    @property {function(string):void} DeleteDataTableEntryByKey - (arg0: key) Delete an existing data table entry using its key value.\r\n    @property {function(Infotable):Infotable} FindDataTableEntries - (arg0: values as Infotable) Retrieve all table entries that match the provided values.\r\n    @property {function():DataShapeDefinition} getDataShape\r\n    @property {function():string} GetDataShape - Get the currently assigned data shape.\r\n    @property {function():string} getDataShapeName\r\n    @property {function(number):Infotable} GetDataTableEntries - (arg0: maxItems) Retrieve all table entries up to max items number.\r\n    @property {function(Infotable):Infotable} GetDataTableEntry - (arg0: values as Infotable) Get an existing data table entry.\r\n    @property {function(string):Infotable} GetDataTableEntryByKey - (arg0: key) Get an existing data table entry using its key value.\r\n    @property {function():number} GetDataTableEntryCount - Get an count of data table entries.\r\n    @property {function():ThingworxRelationshipTypes} getDataType\r\n    @property {function():EntityReferenceTypeMap} getDependencies\r\n    @property {function():IDataEntryCloseableIterator} getEntryIterator - Returns an iterator over all entries inside this data table thing.\r\n    @property {function():Infotable} GetFieldNames - Retrieve a list of field names for the data shape associated with this stream.\r\n    @property {function(string):Infotable} GetFieldNamesByType - (arg0: key) Retrieve a list of field names for the data shape associated with this stream, of a specific type.\r\n    @property {function():string} getItemCollectionName\r\n    @property {function():string} getItemEntityName\r\n    @property {function():ThingworxRelationshipTypes} getItemEntityType\r\n    @property {function():void} initializeEntity\r\n    @property {function():void} initializeThing\r\n    @property {function():boolean}\tisStoredAsEncrypted\r\n    @property {function():void} PurgeDataTableEntries - Remove all data table entries.\r\n    @property {function(Infotable, number, TagCollection, string, *):Infotable} QueryDataTableEntries - (arg0: values, arg1: maxItems, arg2: tags, arg3: source, arg4: query as JSONObject) Retrieve all table entries that match the query parameters.\r\n    @property {function():void} Reindex - Reindex the custom indexes on the data table.\r\n    @property {function(number, string, TagCollection, *, string):Infotable} SearchDataTableEntries - (arg0: maxItems, arg1: searchExpression, arg2: tags, arg3: query as JSONObject, arg4: source)  Retrieve all table entries that match the search query parameters.\r\n    @property {function(string):void} SetDataShape - (arg0: name) Sets the data shape.\r\n    @property {function(TagCollection, Location, string, string, Infotable):void} UpdateDataTableEntries - (arg0: tags, arg1: location, arg2: source, arg3: sourceType, arg4: values) Update multiple data table entries.\r\n    @property {function(TagCollection, Location, string, string, Infotable, *, Infotable):void} UpdateDataTableEntriesWithQuery - (arg0: tags, arg1: location, arg2: source, arg3: sourceType, arg4: values, arg5: query as JSONObject, arg6: updatValues) Add or update multiple data table entries based on a query.\r\n    @property {function(TagCollection, Location, string, string, Infotable):void} UpdateDataTableEntry - (arg0: tags, arg1: location, arg2: source, arg3: sourceType, arg4: values) update an existing data table entry.\r\n    @property {function(ImportedEntityCollection):void} validateConfiguration - (arg0: importedEntityCollections)\r\n*/\r\n\r\n/**\r\n    @typedef Infotable\r\n    @type {object}\r\n    @property {boolean} isCompressed\r\n    @property {DataShape} dataShape\r\n    @property {function(FieldDefinition):int} addField - Adds a field to the DataShapeDefinition of this InfoTable, given a FieldDefinition\r\n    @property {function(*):void} AddField - *FROM SNIPPET* adds a new field definition to the datashape (arg0 is an object that should match with datashape)\r\n    @property {function(object):void} AddRow - *FROM SNIPPET* adds a row to the infotable (arg0 is an object that should match with datashape)\r\n    @property {function(ValueCollection):int} addRow - Adds a row to this InfoTable's ValueCollectionList given a ValueCollection\r\n    @property {ValueCollectionList} rows - returns the ValueCollectionList of the rows in this InfoTable\r\n    @property {function(Infotable, boolean):int} addRowsFrom - Adds the rows from an InfoTable to this InfoTable given: the InfoTable to be copied from and a Boolean indicating whether the copied values should be references or cloned values. (arg 0: infotable, arg1: clone)\r\n    @property {function():Infotable} clone\r\n    @property {function():Infotable} cloneStructure\r\n    @property {function():ValueCollection} currentRow - Returns the current row in this InfoTable as a ValueCollection\r\n    @property {function(object):void} Delete - *FROM SNIPPET* delete rows by value filter (arg0 is an object that should match with datashape)\r\n    @property {function(IFilter):int} delete\r\n    @property {function(ValueCollection):int} delete - Creates an AndFilterCollection based on the given ValueCollection and deletes all rows falling within the parameters of that filter\r\n    @property {function(IFilter):Infotable} deleteRowsToNewTable\r\n    @property {function(object):void} Filter - *FROM SNIPPET* filters the infotable (arg0 is an object that should match with datashape)\r\n    @property {function(ValueCollection):void} filter - Creates an AndFilterCollection based on the given ValueCollection and applies it to this InfoTable\r\n    @property {function(IFilter):void} filterRows\r\n    @property {function(IFilter):Infotable} filterRowsToNewTable\r\n    @property {function(*):Infotable} FilterToNewTable - Finds rows in this InfoTable with values that match the values given as a JSONObject and returns them as a new InfoTable\r\n    @property {function(object):void} Find - *FROM SNIPPET* retrieve rows by value filter (arg0 is an object that should match with datashape)\r\n    @property {function(IFilter):ValueCollection} find - Finds and returns a row from this InfoTable that falls within the parameters of the given IFilter\r\n    @property {function(ValueCollection):ValueCollection} find - Finds and returns a row from this InfoTable that matches the values of all fields given as a (ValueCollection)\r\n    @property {function(ValueCollection, string[]):ValueCollection} find - Finds and returns a row in this InfoTable given the fields to search as a String Array and the values to match as a ( ValueCollection)\r\n    @property {function(ValueCollection):int} findIndex - Finds and returns the index of a row from this InfoTable that matches the values of all fields given as a ( ValueCollection)\r\n    @property {function(*):Infotable} fromJSON\r\n    @property {function():DataShapeDefinition} getDataShape - Returns the DataShapeDefinition for this InfoTable\r\n    @property {function(string):FieldDefinition} getField - Returns a FieldDefinition from this InfoTable's DataShapeDefinition, given the name of the field as a String\r\n    @property {function():int} getFieldCount - Returns the number of fields in this InfoTable's DataShape as an int\r\n    @property {function():ValueCollection} getFirstRow - Returns the first row (ValueCollection) of this InfoTable\r\n    @property {function():InfoTableRowIndex} getIndex -\r\n    @property {function():ValueCollection} getLastRow - Returns the last row in this InfoTable as a ValueCollection\r\n    @property {function():number} getLength - Returns the number of rows in this InfoTable as an Integer\r\n    @property {function():DataShapeDefinition} getPublicDataShape - Returns a DataShapeDefinition for this InfoTable containing only the public fields\r\n    @property {function():*} getReturnValue - Returns the first value of the first field in the first row of this InfoTable\r\n    @property {function(number):ValueCollection} getRow - *FROM SNIPPET* retrieves a row by index\r\n    @property {function():number} getRowCount - *FROM SNIPPET* gets the count of rows\r\n    @property {function():ValueCollectionList} getRows - Returns a ValueCollectionList of the rows in this InfoTable\r\n    @property {function(string):IPrimitiveType} getRowValue - Returns a value as an IPrimitiveType from the first row of this InfoTable, given a field name as a String\r\n    @property {function(string):boolean} hasField - Verifies a field exists in this InfoTable's DataShape given the field name as a String\r\n    @property {function(string[],boolean):void} indexOn\r\n    @property {function(string, boolean):void} indexOn\r\n    @property {function():boolean} isEmpty - Returns a boolean indicating whether this InfoTable has a size of zero\r\n    @property {function(BaseTypes):boolean} isType\r\n    @property {function():void} moveToFirst - Moves to the first row of this InfoTable.\r\n    @property {function():ValueCollection} nextRow - Returns the row after the current row in this InfoTable as a ValueCollection\r\n    @property {function(string):void} quickSort - (arg0: fieldName)\r\n    @property {function(string, boolean):void} quickSort - (arg0: fieldName, arg1: isAscending)\r\n    @property {function():void} RemoveAllRows - *FROM SNIPPET* remove all rows from infotable\r\n    @property {function():void} removeAllRows - remove all rows from infotable\r\n    @property {function(string):void} RemoveField - *FROM SNIPPET* remove a datashape field by name\r\n    @property {function(number):void} RemoveRow - *FROM SNIPPET* removes a row by index\r\n    @property {function(number):void} removeRow - Removes a ValueCollection from the InfoTable given the row as an int\r\n    @property {function(DataShapeDefinition):void} setDataShape - Sets DataShapeDefinition for this InfoTable\r\n    @property {function():void} setRow - Sets a single row in this InfoTable given a ValueCollection as a row and the index of the row to be replaced\r\n    @property {function(ValueCollectionList):void} setRows - Sets the rows in this InfoTable given a ValueCollectionList\r\n    @property {function(Sort):void} Sort - *FROM SNIPPET* sorts the table\r\n    @property {function(ISort):void} sortRows\r\n    @property {function():Infotable} sortRowsToNewTable\r\n    @property {function():*} toJSON\r\n    @property {function():JsonInfotable} ToJSON - *FROM SNIPPET* returns the table as JsonInfotable\r\n    @property {function(number):void} topN - (arg0: maxItems)\r\n    @property {function(number):Infotable} topNToNewTable - (arg0: maxItems)\r\n    @property {function(IFIlter, ValueCollection):Infotable} updateRowsToNewTable - (arg0: filters, arg1: values)\r\n*/\r\n\r\n/**\r\n    @typedef DataShapeDefinition\r\n    @type {object}\r\n    @property {function(FieldDefinition):void} addFieldDefinition - Adds a new field definition to this data shape definition.\r\n    @property {function():DataShapeDefinition} clone - Creates a deep clone of this data shape definition\r\n    @property {function():FieldDefinition} getFieldDefinition - Returns the field definition with the specified name.\r\n    @property {function():FieldDefinitionCollection} getFields - Returns the collection of field definitions belonging to this data shape definition.\r\n    @property {function():boolean} hasField - Tests if the field named exists in this definition.\r\n    @property {function():boolean} hasPrimaryKey - Tests if this definition contains any fields that are designated as primary keys.\r\n    @property {function():boolean} matches - Determines if this data shape definition has the same fields with the same base types as the provided data shape definition.\r\n    @property {function():void} setFields - Replaces the fields belonging to this data shape definition with the fields provided in the specified collection.\r\n    @property {function():*} toJSON - Serializes this data shape definition into JSON format.\r\n*/\r\n\r\n/**\r\n    @typedef FieldDefinition\r\n    @type {object}\r\n    @property {function(AspectCollection):boolean} aspectsMatch - Determines whether or not the aspects assigned to this field are equivalent to the aspects in the provided collection.\r\n    @property {function():FieldDefinition} clone - Creates a deep clone of this field definition.\r\n    @property {function():AspectCollection} getAspects - Returns the collection of aspects belonging to this field.\r\n    @property {function():BaseTypes} getBaseType - Returns the base type assigned to this field.\r\n    @property {function():string} getDataShapeName - Returns the data shape name assigned to the ASPECT_DATASHAPE aspect, if the base type for this field is set to INFOTABLE.\r\n    @property {function():IPrimitiveType} getDefaultValue - Returns the default value assigned to this field, if one has been defined according to the ASPECT_DEFAULTVALUE aspect.\r\n    @property {function():number} getOrdinal - Returns the ordinal value assigned to this field.\r\n    @property {function():boolean} hasDataShape - Determines if, when the base type of this field is an INFOTABLE, a data shape has been assigned.\r\n    @property {function():boolean} hasDefaultValue - Determines if this field has a default value according to the ASPECT_DEFAULTVALUE aspect.\r\n    @property {function():boolean} isDataTableEntry - Determines if, when the base type of this field is an INFOTABLE, the contents of the info table will be derived from a data table entry.\r\n    @property {function():boolean} isPrimaryKey - Determines if this field has the ASPECT_ISPRIMARYKEY aspect set to true.\r\n    @property {function():boolean} isPrivate - Determines if this field has the ASPECT_ISPRIVATE aspect set to true.\r\n    @property {function():boolean} isRequired - Determines if this field has the ASPECT_ISREQUIRED aspect set to true.\r\n    @property {function():boolean} isStreamEntry - Determines if, when the base type of this field is an INFOTABLE, the contents of the info table will be derived from a stream entry.\r\n    @property {function(AspectCollection):void} setAspects - Replaces all aspects on this field with the aspects in the specified collection.\r\n    @property {function(BaseTypes):void} setBaseType - Assigns the specified base type to this field.\r\n    @property {function(number):void} setOrdinal - Sets the ordinal value for this field.\r\n*/\r\n\r\n/**\r\n    @typedef ValueCollectionList\r\n    @type {ArrayList}\r\n    @property {function():Infotable} convertToTypedInfoTable\r\n    @property {function():ValueCollection} currentRow\r\n    @property {function(ValueCollection):ValueCollection} find - arg0: values\r\n    @property {function(ValueCollection, string[]):ValueCollection} find - arg0: values, arg1: columns\r\n    @property {function(ValueCollection):number} findIndex\r\n    @property {function():ValueCollection} getFirstRow\r\n    @property {function():ValueCollection} getLastRow\r\n    @property {function():number} getLength\r\n    @property {function(number):ValueCollection} getRow - arg0: index\r\n    @property {function():number} getRowCount\r\n    @property {function(string):IPrimitiveType} getRowValue - arg0: name\r\n    @property {function():void} moveToFirst\r\n    @property {function():ValueCollection} nextRow\r\n*/\r\n\r\n/**\r\n    @typedef ValueCollection\r\n    @type {NamedObject}\r\n    @property {function():ValueCollection} clone\r\n    @property {function(*,DataShapeDefinition):ValueCollection} fromJSONTyped\r\n    @property {function(string):*} \tgetJSONSerializedValue\r\n    @property {function(string):IPrimitiveType}  getPrimitive\r\n    @property {function(string):string}  getStringValue\r\n    @property {function(string):*} getValue\r\n    @property {function(string):boolean} has\r\n    @property {function(ValueCollection):boolean} matches\r\n    @property {function():Infotable} toInfoTable\r\n    @property {function():*} toJSON\r\n    @property {function(DataShapeDefinition):*} toJSONTyped\r\n    @property {function():NamedValueCollection} toNamedValueCollection\r\n*/\r\n\r\n\r\n/**\r\n * Do something\r\n * @param {DataTableThing} dataTable\r\n */\r\nvar doSomething = function (dataTable) {\r\n};\r\n```\r\n\r\n2. Hover on DataTableThing param to trigger the intellisense \r\n3. Either it will be very slow to load the intellisense or it will show a loading tooltip followed by a popup.\r\n4. Adding some more typing will always make it hang (I removed some to have less code to copy-paste)\r\n\r\n![image](https://user-images.githubusercontent.com/5531265/40068907-bf7d35d2-5837-11e8-895f-9aa53720b341.png)\r\nand then\r\n![image](https://user-images.githubusercontent.com/5531265/40068921-c6735fba-5837-11e8-8743-1675ce9ce276.png)\r\n\r\nDoes this issue occur when all extensions are disabled?: Yes\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49919"}, {"body": "- VSCode Version: 1.23.1\r\n- OS Version: Windows 10\r\n\r\nSteps to Reproduce:\r\n\r\n1. Start a live share session\r\n2. Reload the window\r\n\r\nNOTE: Liveshare connection dies\r\n\r\nI understand that it's probably intentional that this dies but it'd be nice if there was a cache of previous connections that I could just click and restart. \r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49918"}, {"body": "Implements an outline view to address issue #5605. There are two main topics: **1.** \"Where is the outline view located?\" and **2.** \"What does the outline view show?\". This PR is only about **2**. ", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49917"}, {"body": "Issue Type: <b>Bug</b>\r\n\r\nOn a project that uses XUnit for unit testing, after using VSCode's feature to \"Debug Test\", I lose intellisense and that very same feature disapears until I restart...\r\nAny idea what might cause it? Any logs that I can share?\r\nI'm posting this here because I'm assuming that the \"Debug Test\" is a feature from VSCode and not from the Omnisharp extension. If it's not, I'll move the issue\r\n\r\nVS Code version: Code 1.23.1 (d0182c3417d225529c6d5ad24b7572815d0de9ac, 2018-05-10T16:04:33.747Z)\r\nOS version: Linux x64 4.13.0-41-generic (Mint 18.3)\r\n\r\n<details><summary>Extensions (8)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nmaterial-icon-theme|PKi|3.4.0\r\ngitlens|eam|8.2.4\r\ndocomment|k--|0.1.0\r\nprettify-json|moh|0.0.3\r\ncsharp|ms-|1.15.1\r\nPowerShell|ms-|1.7.0\r\ncode-spell-checker|str|1.6.10\r\nvscode-todo-highlight|way|0.5.12\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49916"}, {"body": "<!--\r\nDo you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode.\r\n\r\nFor bug reports, please fill in the details below. For feature requests, please describe the desired feature.\r\n-->\r\n\r\n<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version: 1.24\r\n- OS Version: Windows 10 x64\r\n\r\nSteps to Reproduce:\r\n\r\n1.  Setup an extension to listen to `window.onDidChangeActiveTextEditor`\r\n2. Open a webview (markdown preview or something else)\r\n3. Observe that the active editor is `undefined`\r\n\r\nCan some sort of editor be returned so that an extension can get some identifying information about the webview -- its id, etc?\r\n\r\nThis limits extensions from being able to appropriately deal with webviews.\r\n\r\nThis is somewhat related to #49914\r\n\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: No\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49915"}, {"body": "<!--\r\nDo you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode.\r\n\r\nFor bug reports, please fill in the details below. For feature requests, please describe the desired feature.\r\n-->\r\n\r\n<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version: 1.24\r\n- OS Version: Windows 10 x64\r\n\r\nSteps to Reproduce:\r\n\r\n1.  Setup an extension to listen to `window.onDidChangeActiveTextEditor`\r\n2. Open an image\r\n3. Observe that the active editor is `undefined`\r\n\r\nSince an image is backed by a file can some sort of editor be returned so that an extension can get the `Uri` and maybe the type of editor (i.e. `image`)\r\n\r\nThis hampers GitLens and other extensions from being able to deal with images -- showing history, diffs, etc.\r\n\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: No\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49914"}, {"body": "Hi!\r\n\r\nI would like to debug Visual Studio Code to see how it works, especially how the IntelliSense feature works. How can this be done? Can I do this WITHIN Visual Studio code, or do I need some 3rd party software to do this? If the only option is the latter, then could you please recommend me an app, and provide some tips how to do it? Thank you in advance.\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49913"}, {"body": "Currently when adding multiple folders to a workspace, I feel that the root project folders get lost amongst each other, as they don't have their own identifying icon or difference in the UI to a normal folder.\r\n\r\nIt's just a subtle change I've noticed, but from switching from Atom to VS Code I have really missed having an identifier for root folders.\r\n\r\nTo show what I mean, I've created a side by side screenshot between Atom and VS Code with three root projects. Atom does a pretty good job of this by adding a specific icon and making the project folders slightly taller... \r\n\r\n(Atom left, VS Code right)\r\n<img width=\"655\" alt=\"sidebyside\" src=\"https://user-images.githubusercontent.com/6653181/40063882-351e94ca-5856-11e8-92d6-854f703f3e3b.png\">\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49911"}, {"body": "Issue Type: <b>Bug</b>\r\n\r\nI have a jsconfig.json that looks like:\r\n![image](https://user-images.githubusercontent.com/2136925/40063891-51923726-582c-11e8-8809-f0ace5c3ea4a.png)\r\n\r\nMy goal is to achieve the equivalent of adding `//ts-check` to all js files in my project. I also have some .jsx files I want to exclude, but even if I add the `**/*.jsx` pattern to the exclude section, I still get errors and squiggles in my jsx.\r\n![image](https://user-images.githubusercontent.com/2136925/40064001-9d44b572-582c-11e8-9129-2648986056fd.png)\r\n\r\nIf I add `// @ts-nocheck` to this file, it removes all errors and squiggles.\r\n\r\nBut I know the exclude config section is doing _something_, because if I omit it I get many more errors that I didn't have otherwise.\r\n![image](https://user-images.githubusercontent.com/2136925/40064199-0543ad9a-582d-11e8-8a0e-00f1f426b0d7.png)\r\n\r\nSo in summary, it seems that there is a bug here in that the exclude option does not function in quite the same way as `// @ts-nocheck`.\r\n\r\nVS Code version: Code 1.23.1 (d0182c3417d225529c6d5ad24b7572815d0de9ac, 2018-05-10T17:11:17.614Z)\r\nOS version: Windows_NT x64 10.0.16299\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-6820HQ CPU @ 2.70GHz (8 x 2712)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: disabled_software<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Memory (System)|31.88GB (17.68GB free)|\r\n|Process Argv|C:\\Program Files\\Microsoft VS Code\\Code.exe C:\\Users\\benjamin.brown\\Downloads\\0000-ben-browns-test-spa.json|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (16)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\ncake-vscode|cak|0.10.1\r\nnpm-intellisense|chr|1.3.0\r\nxml|Dot|1.9.2\r\nprettier-vscode|esb|1.3.1\r\ngc-excelviewer|Gra|2.0.21\r\nvscode-nuget-package-manager|jmr|1.1.6\r\ngraphql-for-vscode|kum|1.11.0\r\nmssql|ms-|1.3.1\r\npython|ms-|2018.4.0\r\ncsharp|ms-|1.15.1\r\nPowerShell|ms-|1.7.0\r\nvscode-icons|rob|7.23.0\r\nvscode-coverage-gutters|rya|2.0.0\r\ncode-settings-sync|Sha|2.9.2\r\nvscode-hexdump|sle|1.6.0\r\npdf|tom|0.2.0\r\n\r\n(1 theme extensions excluded)\r\n\r\n</details>\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49910"}, {"body": "Issue Type: <b>Bug</b>\r\n\r\nAfter a laptop reimage, I get the \"No Team Services or Team Foundation Server repository configuration was found\" message. I have VS 2017 installed and I know the TFS local workspace is setup. TFS through VS2017 works fine.\r\n\r\nAdd Team Services extenion, modify user.settings, from the command palette, team:signin.\r\n\r\n\r\nVS Code version: Code 1.23.1 (d0182c3417d225529c6d5ad24b7572815d0de9ac, 2018-05-10T17:11:17.614Z)\r\nOS version: Windows_NT x64 10.0.16299\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (8 x 2592)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: disabled_software<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: unavailable_software<br>webgl: enabled<br>webgl2: enabled|\r\n|Memory (System)|31.88GB (23.08GB free)|\r\n|Process Argv|C:\\Program Files\\Microsoft VS Code\\Code.exe|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (3)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nmssql|ms-|1.3.1\r\nPowerShell|ms-|1.7.0\r\nteam|ms-|1.133.0\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49909"}, {"body": "Is there a chance to highlight with different background color code segments for PHP, JS and HTML mixed in a single php file?\r\n\r\nFor example, on the screen shot below there is the comparison of VS Code layout and layout of another text editor. The Notepad editor marks PHP and JS code segments each with its own color, so it is extremely easy to distinguish one from another one:\r\n<img width=\"461\" alt=\"2\" src=\"https://user-images.githubusercontent.com/31000984/40063161-63c4b408-5865-11e8-93d5-37d8f8f7a142.PNG\">\r\nThe color theme used is standard \"Light+\"\r\n\r\nAs FE developer I'm facing such mix quite often. The VS Code is perfect, but at the moment it is very hard to work with such PHP files due to lack of visibility.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49906"}, {"body": "Issue Type: <b>Bug</b>\r\n\r\nUsing the language specific folding:\r\n\r\n![image](https://user-images.githubusercontent.com/9205389/40062758-3a2f53cc-585c-11e8-9889-7dcc427987ef.png)\r\n\r\n![image](https://user-images.githubusercontent.com/9205389/40062918-852dd772-585c-11e8-98fd-39abf9ca49a3.png)\r\n\r\n```ts\r\n// #region 1\r\n\r\nasync function foo3() {\r\n\t\r\n}\r\n\r\n// #endregion\r\n\r\n// #region 2\r\n\r\nasync function bar4() {\r\n\r\n}\r\n\r\n// #endregion\r\n```\r\n\r\n\r\nVS Code version: Code - Insiders 1.24.0-insider (0d376d890ceb406cabd2b4281deebf5f4038a78c, 2018-05-15T05:10:53.660Z)\r\nOS version: Darwin x64 16.7.0\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-4770HQ CPU @ 2.20GHz (8 x 2200)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: enabled<br>rasterization: enabled<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|2, 2, 3|\r\n|Memory (System)|16.00GB (0.30GB free)|\r\n|Process Argv|/Applications/Visual Studio Code - Insiders.app/Contents/MacOS/Electron -psn_0_18792939|\r\n|Screen Reader|no|\r\n|VM|20%|\r\n\r\n</details><details><summary>Extensions (18)</summary>\r\n\r\nReproduces without extensions.\r\n\r\n</details>\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49904"}, {"body": "\r\nIssue Type: <b>Bug</b>\r\n\r\nThe git branch is not updated in the status bar when I switch branch from the command line.\r\nBtw: my code is on a remote vm \r\n\r\nVS Code version: Code 1.23.0 (7c7da59c2333a1306c41e6e7b68d7f0caa7b3d45, 2018-05-03T16:44:55.614Z)\r\nOS version: Windows_NT x64 10.0.16299\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-6500U CPU @ 2.50GHz (4 x 2592)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: disabled_software<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Memory (System)|11.91GB (1.95GB free)|\r\n|Process Argv|C:\\Program Files\\Microsoft VS Code\\Code.exe|\r\n|Screen Reader|no|\r\n|VM|67%|\r\n\r\n</details><details><summary>Extensions (20)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nvscode-css-formatter|aes|1.0.1\r\nvscode-color|ans|0.4.5\r\ncform|aws|0.0.10\r\nnpm-intellisense|chr|1.3.0\r\npath-intellisense|chr|1.4.2\r\nbracket-pair-colorizer|Coe|1.0.48\r\nsystemd-unit-file|coo|1.0.0\r\nvscode-eslint|dba|1.4.8\r\nvscode-npm-script|eg2|0.3.4\r\nvscode-great-icons|emm|2.1.32\r\nsearch-node-modules|jas|1.3.0\r\ncode-bitbucket-pipelines|luk|0.4.2\r\nterraform|mau|1.0.7\r\ncode-beautifier|mic|2.0.3\r\nvscode-docker|Pet|0.0.26\r\njinjahtml|sam|0.3.0\r\ntrailing-spaces|sha|0.2.11\r\nnodejs-extension-pack|wad|0.1.9\r\nHCL|who|0.0.5\r\nJavaScriptSnippets|xab|1.6.0\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49903"}, {"body": "Type any text after dash (\"-\") after \"Negotiate\"\r\n\r\n\r\n\r\nPS C:\\Ignite\\2016> Start-BitsTransfer https://sec.ch9.ms/sessions/ignite/2016/BRK3101.pptx -ProxyCredential (get-credential) -ProxyAuthentication Negotiate -\r\nAn error occurred while reading input:\r\n\r\nSystem.ArgumentOutOfRangeException: The value must be greater than or equal to zero and less than the console's buffer size in that dimension.\r\nParameter name: top\r\nActual value was 3000.\r\n   at System.Console.SetCursorPosition(Int32 left, Int32 top)\r\n   at Microsoft.PowerShell.EditorServices.Console.ConsoleReadLine.InsertInput(StringBuilder inputLine, Int32 promptStartCol, Int32 promptStartRow, String insertedInput, Int32 cursorIndex, Int32 insertIndex, Int32 replaceLength, Int32 finalCursorIndex)\r\n   at Microsoft.PowerShell.EditorServices.Console.ConsoleReadLine.<ReadLine>d__8.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.PowerShell.EditorServices.EditorServicesPSHostUserInterface.<StartReplLoop>d__95.MoveNext()\r\n\r\nVS Code version: Code 1.23.1 (d0182c3417d225529c6d5ad24b7572815d0de9ac, 2018-05-10T17:11:17.614Z)\r\nOS version: Windows_NT x64 10.0.17134\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-6600U CPU @ 2.60GHz (4 x 2808)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: disabled_software<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: unavailable_software<br>webgl: enabled<br>webgl2: enabled|\r\n|Memory (System)|15.83GB (8.38GB free)|\r\n|Process Argv|C:\\Program Files\\Microsoft VS Code\\Code.exe|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (7)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nxml|Dot|1.9.2\r\nvscode-PSStackoverflow|Dou|0.0.2\r\ntslint|eg2|1.0.28\r\ncpptools|ms-|0.17.0\r\nPowerShell|ms-|1.7.0\r\nvscode-docker|Pet|0.0.26\r\nvscode-arduino|vsc|0.2.15\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter --> it was too large to send. Please paste.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49901"}, {"body": "I'm working on a language extension which can upload code to a connected device over serial port. It is not possible to debug the code in the classic way (breakpoints etc.), so creating a debug-adapter wouldn't make much sense. However the device can \"print\" messages back over serial port and also read from serial port during code execution.\r\nWith `vscode.debug.activeDebugConsole.appendLine()` I can show received messages to the user. However I could not find any API to get the input from the debug console directly. When I enter something there only \"Please start a debug session to evaluate\" appears.\r\n\r\nIt would be nice if the debug console could be also used as a \"terminal\" for custom input/output.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49900"}, {"body": "<!--\r\nDo you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode.\r\n\r\nFor bug reports, please fill in the details below. For feature requests, please describe the desired feature.\r\n-->\r\n\r\n<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version: Version 1.23.1 (1.23.1)\r\n- OS Version: MacOs High Sierra 10.13.4\r\n\r\nSteps to Reproduce:\r\n\r\n1.Try to open terminal \r\n2.The terminal process command '/bin/bash -l' failed to launch (exit code: 1)\r\n\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: Yes/No\r\n![screen shot 2018-05-15 at 14 36 46](https://user-images.githubusercontent.com/15184336/40057049-7e092b86-584d-11e8-99a7-aafab781c7b4.png)\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49898"}, {"body": "English\r\nVersion 1.24.0-insider\r\nCommit 5d12f53178b72e88431347f8e248c49335a7fefc\r\nDate 2018-05-14T05:16:26.538Z\r\nShell 1.7.12\r\nRenderer 58.0.3029.110\r\nNode 7.9.0\r\nArchitecture x64\r\n\r\nI've noted that somehow a malformed character was created in a PS script I was working on.  However, it was not visible in Code.  I could only see it in native PS and PS IVE.\r\n\r\nBad character in PS IVE:\r\n![image](https://user-images.githubusercontent.com/548588/40056578-d0223ef0-5819-11e8-8faa-3d7a4edc92b9.png)\r\n\r\nSame code opened from same file as above in Code with BP enabled:\r\n![image](https://user-images.githubusercontent.com/548588/40056581-d3a8bc7a-5819-11e8-9660-3ddbf9b38605.png)\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49897"}, {"body": "- VSCode Version: 1.23.1\r\n- OS Version: Windows 10 Pro \r\n\r\nSteps to Reproduce:\r\n\r\n1. Right click on Folder\r\n2. Click 'Find in folder'\r\n3. Search for something\r\n4. spawn ENAMETOOLONG\r\n\r\n![search__spawn-enametoolong](https://user-images.githubusercontent.com/5364383/40054620-cbd3cd92-5845-11e8-948e-7a8251d61a6c.gif)\r\n\r\nDoes this issue occur when all extensions are disabled?: Yes, in the preview above, I have all extensions disabled. \r\n\r\n*UPDATE 15-05-18*\r\n\r\nAs seen in the preview, I have a lot of Project folders in my workspace. When searching it uses ./[projectname]/. to search in that project folder, wich returns the 'spawn ENAMETOOLONG' error message.\r\n\r\nWhen I remove the project folder + /. at the end, it works but searches every project folder within the workspace... ", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49896"}, {"body": "During the last couple of updates of VSCode Insiders, fuzzy matching for snippets when using \"snippetSuggestions: inline\" has stopped working.\r\n\r\nThis is what I get:\r\n![2018-05-15_04-15-55](https://user-images.githubusercontent.com/20391356/40053811-8b15560c-57f7-11e8-8613-ddf1935fe763.gif)\r\nVersion 1.24.0-insider\r\nCommit 5d12f53178b72e88431347f8e248c49335a7fefc\r\nDate 2018-05-14T05:16:26.538Z\r\n\r\nThis is what I expect:\r\n![2018-05-15_04-19-55](https://user-images.githubusercontent.com/20391356/40053812-8b2c1b30-57f7-11e8-9ba6-9028470c03a6.gif)\r\nVersion 1.23.1\r\nCommit d0182c3417d225529c6d5ad24b7572815d0de9ac\r\nDate 2018-05-10T17:11:17.614Z\r\n\r\n\"snippetSuggestions: top\" still performs fuzzy matching for snippets just fine.\r\nFuzzy matching for everything else also appears to be fine.\r\n\r\n- Does this issue occur when all extensions are disabled?: Yes\r\n  I tested this with default snippets only (no extensions) and with snippet extensions enabled.\r\n- OS Version: Windows 10\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49895"}, {"body": "Issue Type: <b>Bug</b>\r\n\r\nVS Code version: Code 1.23.0 (7c7da59c2333a1306c41e6e7b68d7f0caa7b3d45, 2018-05-03T15:23:19.356Z)\r\nOS version: Linux x64 4.13.0-41-generic\r\n\r\n## Description:\r\n\r\nWe are maintainers of [vscode-react-native](https://github.com/Microsoft/vscode-react-native) extension for VS Code and we have a lot of users requests for solving this (https://github.com/Microsoft/vscode-react-native/issues/631).\r\n\r\nCurrently, flow [does support type aliases](https://flow.org/en/docs/types/aliases/#toc-type-alias-syntax) and every modern React Native project supports type aliases for javascript files. Moreover, basic projects that has been generated via `react-native init <appname>` already has used type aliases for component props. In this case it looks very weird that VS Code doesn't support it for `javascriptreact` language.\r\n\r\nThere are several similar issues already (https://github.com/Microsoft/vscode/issues/15171, https://github.com/Microsoft/vscode/issues/25737) but none of them are opened but even forbidden for leaving any feedback. \r\n\r\nAlso, Sublime and Atom doesn't have such problem.\r\n\r\n![image](https://user-images.githubusercontent.com/30265843/40051674-4a5695e8-5844-11e8-9e43-546487d1b74e.png)\r\n\r\n![image](https://user-images.githubusercontent.com/30265843/40052023-6c38380a-5845-11e8-8447-7c71e21a2e84.png)\r\n\r\n## Steps to Reproduce:\r\n\r\n1. Clone [blank React Native project](https://github.com/ruslan-bikkinin/rn631) that has been generated using `react-native init rn631` command.\r\n2. Install node modules for project by using `npm i`.\r\n2. Open it in VS Code.\r\n3. Open `App.js` file and switch language mode to `Javascript React`.\r\n\r\n## Expected Behavior\r\n\r\nNo problems found by VS Code\r\n\r\n## Actual Behavior\r\n\r\n![image](https://user-images.githubusercontent.com/30265843/40048557-372def2e-583b-11e8-8b35-e8b20bb8fe07.png)\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49894"}, {"body": "<!--\r\nDo you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode.\r\n\r\nFor bug reports, please fill in the details below. For feature requests, please describe the desired feature.\r\n-->\r\n\r\n<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version:\r\n- OS Version:\r\n\r\nSteps to Reproduce:\r\n\r\n1.\r\n2.\r\n\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: Yes/No\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49890"}, {"body": "- VSCode Version: 1.23.1\r\n- OS Version: Windows 10 x64\r\n\r\nDoes this issue occur when all extensions are disabled?: Yes\r\n\r\n**Steps to Reproduce:**\r\n\r\n1. Clone a git repository and open it in VSCode\r\n2. Clone another git repository within the cloned repository.\r\n3. The second repository does not show up in source control.\r\n\r\n**Our project setup:**\r\n> Servers (parent git repo, workspace root, visible)\r\n>> server x (child git repo, not visible)", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49888"}, {"body": "", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49887"}, {"body": "* have a busy extension host or tsserver\r\n* selection 'Source Action...'\r\n* while the request is pending keep changing the selection or start typing\r\n* \ud83d\udc1b the new menu shows eventually, expectation is that the request should have been canceled because I went off doing something else", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49884"}, {"body": "\r\nIssue Type: <b>Performance Issue</b>\r\n\r\n```\r\n 1067   ??  R      0:17.54 /Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper /Users/theuser/.vscode/extensions/octref.vetur-0.12.1/node_modules/vscode-languageclient/lib/utils/electronForkStart /Users/theuser/.vscode/extensions/octref.vetur-0.12.1/server/dist/vueServerMain.js --node-ipc --clientProcessId=1064\r\n 1096   ??  R      0:13.75 /Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper /Users/theuser/.vscode/extensions/bmewburn.vscode-intelephense-client-0.8.8/node_modules/vscode-languageclient/lib/utils/electronForkStart /Users/theuser/.vscode/extensions/bmewburn.vscode-intelephense-client-0.8.8/node_modules/intelephense-server/lib/server.js --node-ipc --clientProcessId=1064\r\n```\r\n\r\nThese processes maintain a CPU load that is well over 100% and will never end.\r\npid: 1067 is vetur, pid: 1096 is intelephense\r\nIt seems like the process that each extension launched, \r\nbut these extensions did not cause such a high load before recent vscode updates occurred.\r\n\r\n\r\nVS Code version: Code 1.23.1 (d0182c3417d225529c6d5ad24b7572815d0de9ac, 2018-05-10T16:03:31.083Z)\r\nOS version: Darwin x64 17.5.0\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-6920HQ CPU @ 2.90GHz (8 x 2900)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: enabled<br>rasterization: enabled<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|3, 3, 2|\r\n|Memory (System)|16.00GB (8.31GB free)|\r\n|Process Argv|/Applications/Visual Studio Code.app/Contents/MacOS/Electron|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details>\r\n<summary>Process Info</summary>\r\n\r\n```\r\nCPU %\tMem MB\t   PID\tProcess\r\n   13\t   180\t   593\tcode main\r\n    0\t   131\t   594\t   gpu-process\r\n    0\t    98\t   596\t   shared-process\r\n    0\t   344\t  1063\t   window (DatabaseEdit.vue \u2014 theproject)\r\n    3\t   197\t  1064\t     extensionHost\r\n  180\t   213\t  1067\t       electron_node vueServerMain.js \r\n    0\t    33\t  1074\t       /Users/theuser/.vscode/extensions/ms-vsliveshare.vsliveshare-0.3.114/dotnet_modules/vsls-agent --autoexit --pipe 45407fcb7bd140eb92a6dfdc8654573c --service https://insiders.liveshare.vsengsaas.visualstudio.com/\r\n  117\t   459\t  1096\t       electron_node server.js \r\n    0\t    98\t  1065\t     watcherService\r\n    0\t    49\t  1106\t     searchService\r\n    0\t    82\t  1114\t   shared-process\r\n    0\t     0\t  1115\t   (ps)\r\n    0\t     0\t  1116\t   (ps)\r\n    0\t     0\t  1117\t   /bin/ps -ax -o pid=,ppid=,pcpu=,pmem=,command=\r\n```\r\n\r\n</details>\r\n<details>\r\n<summary>Workspace Info</summary>\r\n\r\n```\r\n|  Window (DatabaseEdit.vue \u2014 theproject)\r\n|    Folder (theproject): 9733 files\r\n|      File types: php(7126) md(225) phpt(205) json(197) data(189) xml(162)\r\n|                  txt(160) test(158) z(84) yml(80)\r\n|      Conf files: makefile(6) launch.json(1) settings.json(1) package.json(1)\r\n|                  webpack.config.js(1)\r\n|      Launch Configs: php;\r\n```\r\n\r\n</details>\r\n<details><summary>Extensions (14)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nEditorConfig|Edi|0.12.1\r\nvscode-language-pack-ja|MS-|1.23.0\r\nvscode-docker|Pet|0.0.26\r\nnumbered-bookmarks|ale|0.11.1\r\nvscode-intelephense-client|bme|0.8.8\r\ngithistory|don|0.4.1\r\ngitlens|eam|8.2.4\r\nphp-debug|fel|1.12.3\r\nvue-snippets|hol|0.1.5\r\nvsliveshare|ms-|0.3.114\r\ndebugger-for-chrome|msj|4.4.3\r\nvetur|oct|0.12.1\r\nlaravel-blade|one|1.18.0\r\nsass-indented|rob|1.4.9\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49883"}, {"body": "This has been reported for the solidity extension of vscode. https://github.com/juanfranblanco/vscode-solidity/issues/69#issuecomment-389053364. Mainly the linter has stopped working.\r\n\r\nAfter an investigation by the OP, there were found two versions of the extension in the %userpath%/.vscode/extension.  A previous one and the current one.\r\n\r\nDeleting them both and reinstalling fixed the problem.\r\n\r\nI assume the issue might be due to both servers are running in the background causing the issue.\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49882"}, {"body": "Issue Type: <b>Bug</b>\r\n\r\nResize the terminal and run something with a lot of output\r\n\r\nVS Code version: Code - Insiders 1.24.0-insider (84d023798b51a8ad607fd865dd8e16949ee3c398, 2018-05-09T05:10:45.678Z)\r\nOS version: Darwin x64 15.6.0\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i5-5287U CPU @ 2.90GHz (4 x 2900)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: enabled<br>rasterization: enabled<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|2, 2, 2|\r\n|Memory (System)|16.00GB (7.24GB free)|\r\n|Process Argv|/Applications/Visual Studio Code - Insiders.app/Contents/MacOS/Electron -psn_0_32776|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (11)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nrainbow-brackets|2gu|0.0.6\r\nmaterial-icon-theme|PKi|3.4.0\r\nnpm-intellisense|chr|1.3.0\r\nvscode-eslint|dba|1.4.8\r\ntslint|eg2|1.0.28\r\ncode-runner|for|0.9.3\r\npython|ms-|2018.4.0\r\npolacode|pnp|0.2.2\r\nsass-indented|rob|1.4.9\r\nlanguage-stylus|sys|1.9.2\r\nvscode-import-cost|wix|2.6.2\r\n\r\n(2 theme extensions excluded)\r\n\r\n</details>\r\n<!-- generated by issue reporter -->\r\n\r\n![image](https://user-images.githubusercontent.com/6014476/40041619-8d88a712-5816-11e8-98de-d8a57d31ca34.png)\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49878"}, {"body": "\r\nIssue Type: <b>Bug</b>\r\n\r\n* VS Code Version: 1.23.1\r\n* OS version: Windows_NT x64 6.1.7601\r\n\r\nCan't launch the GDB debugger if the file path of the source file contains any special Unicode characters.\r\n\r\nThis is my launch.json file:\r\n```\r\n{\r\n    \"version\": \"0.2.0\",\r\n    \"configurations\": [\r\n        {\r\n            \"name\": \"(gdb) Launch\",\r\n            \"type\": \"cppdbg\",\r\n            \"request\": \"launch\",\r\n            \"program\": \"${workspaceFolder}/warmup.exe\",\r\n            \"args\": [],\r\n            \"stopAtEntry\": false,\r\n            \"cwd\": \"${workspaceFolder}\",\r\n            \"environment\": [],\r\n            \"externalConsole\": true,\r\n            \"MIMode\": \"gdb\",\r\n            \"miDebuggerPath\": \"C:/msys64/mingw64/bin/gdb.exe\",\r\n            \"setupCommands\": [\r\n                {\r\n                    \"description\": \"Enable pretty-printing for gdb\",\r\n                    \"text\": \"-enable-pretty-printing\",\r\n                    \"ignoreFailures\": true\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n```\r\nThe error I got:\r\n\r\n![captura](https://user-images.githubusercontent.com/18406325/40040881-67b3e19c-57f2-11e8-8ab8-e71b56281e16.JPG)\r\n\r\nThe problem is with the characters '\u00f3' and '\u00e1' in \"computaci\u00f3n\" and \"im\u00e1genes\". When I rename the folders, it works fine.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49877"}, {"body": "Issue Type: <b>Bug</b>\r\n\r\nHave folder open with F# files (.fs and .fsx extenions) for >~ an hour. Eventually cpu usage of VSCode is reported close to 100% by windows 10\r\n\r\nVS Code version: Code 1.23.1 (d0182c3417d225529c6d5ad24b7572815d0de9ac, 2018-05-10T17:11:17.614Z)\r\nOS version: Windows_NT x64 10.0.16299\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-4770K CPU @ 3.50GHz (8 x 3500)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: disabled_software<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Memory (System)|15.94GB (9.35GB free)|\r\n|Process Argv|J:\\Microsoft VS Code\\Code.exe|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (18)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nbetter-toml|bun|0.3.2\r\nreasonml|fre|1.0.34\r\nIonide-FAKE|Ion|1.2.3\r\nIonide-fsharp|Ion|3.20.3\r\nIonide-Paket|Ion|1.11.0\r\nvscode-rust|kal|0.4.2\r\nLua|key|0.0.9\r\nKotlin|mat|1.6.0\r\nvscode-exec-node|mir|0.5.0\r\npython|ms-|2018.4.0\r\ncpptools|ms-|0.17.0\r\nvscode-code-outline|pat|0.2.0\r\nvscode-html-to-elm|Rub|0.0.2\r\nelm|sbr|0.17.0\r\nshader|sle|1.1.3\r\nvscode-lua|tri|0.12.4\r\ncmake|twx|0.0.17\r\ncmake-tools|vec|0.11.1\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49875"}, {"body": "We have written the needed data into your clipboard because it was too large to send. Please paste.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49874"}, {"body": "<!--\r\nDo you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode.\r\n\r\nFor bug reports, please fill in the details below. For feature requests, please describe the desired feature.\r\n-->\r\n\r\n<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version: 1.23.1\r\n- OS Version: mac\r\n\r\nSteps to Reproduce:\r\n\r\n1.\r\n<style scoped>\r\n.demo{no style tip in here}\r\n</style>\r\n\r\nin style of the Vue file,\r\nI input \"fon\", that would show me:\"font\"or\"font-size\",but that is nothing, all nothing tip.\r\nAnd was the before 1.23.1, that css tip was normal!\r\n\r\n2.\r\n\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: Yes/No\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49873"}, {"body": "Issue Type: <b>Bug</b>\r\n\r\nWhen I try to use a typescript module from VSCode in common js, intellisense does not work correctly. Probably because of default export(I think). Since the package functionality works correctly but the intellisense does not, I am reporting this as a bug.\r\n\r\n1. Create a new Node.js project (`npm init -y`)\r\n2. Add [`sindresorhus/ow`](https://github.com/sindresorhus/ow) to the package(`npm i ow`)\r\n3. Import the package in a JS file and trigger intellisense:\r\n  ![image](https://user-images.githubusercontent.com/22251956/39978207-e24bfa84-575c-11e8-86d6-070144a7e087.png)\r\n  ![image](https://user-images.githubusercontent.com/22251956/39978234-131d1580-575d-11e8-92e3-7f6d69066690.png)\r\n\r\nI opened an issue(sindresorhus/ow#76) in the `ow` repository but they were not aware of any Typescript(export annotation?) workarounds to make the intellisense work correctly. If there is one, please do point me to the relevant resource. \r\n\r\nVS Code version: Code 1.23.1 (d0182c3417d225529c6d5ad24b7572815d0de9ac, 2018-05-10T16:04:33.747Z)\r\nOS version: Linux x64 4.15.0-20-generic\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i5-5200U CPU @ 2.20GHz (4 x 2469)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: disabled_software<br>video_decode: unavailable_software<br>video_encode: enabled<br>vpx_decode: unavailable_software<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|1, 2, 2|\r\n|Memory (System)|11.45GB (4.04GB free)|\r\n|Process Argv|/usr/share/code/code --unity-launch|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (20)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nbracket-pair-colorizer|Coe|1.0.48\r\nEditorConfig|Edi|0.12.1\r\nCreateModule|Hoo|0.0.5\r\nvscode-jest|Ort|2.7.2\r\ncode-settings-sync|Sha|2.9.2\r\nmarkdown-emoji|bie|0.0.7\r\nbetter-toml|bun|0.3.2\r\ngitignore|cod|0.5.0\r\nvscode-npm-source|dku|1.0.0\r\ngithistory|don|0.4.1\r\nvscode-npm-script|eg2|0.3.4\r\ncode-runner|for|0.9.3\r\nGo|ms-|0.6.80\r\nvetur|oct|0.11.8\r\npolacode|pnp|0.2.2\r\nvscode-icons|rob|7.23.0\r\nlinter-xo|sam|2.1.3\r\nshellcheck|tim|0.4.0\r\ngitblame|wad|2.4.2\r\nvscode-open-in-github|ziy|1.3.1\r\n\r\n(1 theme extensions excluded)\r\n\r\n</details>\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49872"}, {"body": "Issue Type: <b>Bug</b>\r\n\r\nOpen a Java Spring Boot project and introduce an import error in a Java class file.\r\nThe editor isn't detecting the error.\r\nAfter a while, I get this message: \"Extension host terminated unexpectedly.\"\r\nI have updated vscode and rebooted to no avail.\r\n\r\nThis feature was working brilliantly until today, so now I'm sad.\r\n\r\nVS Code version: Code 1.23.1 (d0182c3417d225529c6d5ad24b7572815d0de9ac, 2018-05-10T16:04:33.747Z)\r\nOS version: Linux x64 4.13.0-41-generic\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|AMD Ryzen 7 1700 Eight-Core Processor (16 x 3445)|\r\n|GPU Status|2d_canvas: unavailable_software<br>flash_3d: unavailable_software<br>flash_stage3d: unavailable_software<br>flash_stage3d_baseline: unavailable_software<br>gpu_compositing: unavailable_software<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: unavailable_software<br>video_decode: unavailable_software<br>video_encode: unavailable_software<br>vpx_decode: unavailable_software<br>webgl: unavailable_off<br>webgl2: unavailable_off|\r\n|Load (avg)|1, 1, 0|\r\n|Memory (System)|31.37GB (27.39GB free)|\r\n|Process Argv|/usr/share/code/code .|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (5)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\njava|red|0.24.0\r\nvscode-java-debug|vsc|0.9.0\r\nvscode-java-pack|vsc|0.3.0\r\nvscode-java-test|vsc|0.6.1\r\nvscode-maven|vsc|0.7.0\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49871"}, {"body": "This is a pull request for issue: #49868\r\n\r\nAdd `commits` setting to `git.checkoutType` to only list local and remote branches, excluding tags", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49870"}, {"body": "", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49869"}, {"body": "Issue Type: <b>Feature Request</b>\r\n\r\nThe default order for the git checkout menu puts tags ahead of remote branches, so when I pull down remote branches to review or work on, I always have to scroll past tags that I rarely, if ever, need to checkout locally.  The existing configuration setting does not have an option for excluding tags\r\n\r\nVS Code version: Code 1.23.1 (d0182c3417d225529c6d5ad24b7572815d0de9ac, 2018-05-10T16:03:31.083Z)\r\nOS version: Darwin x64 17.4.0\r\n\r\n\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49868"}, {"body": "code:\r\nfunction fact(n)\r\n    if n==0 then\r\n        return 1\r\n    else\r\n        return n*fact(n-1)\r\n    end\r\nend\r\n\r\nprint(\"enter a number:\")\r\na=io.read(\"*number\")\r\nprint(fact(a))\r\n\r\noutput:\r\nenter a number:\r\nrun.lua:9\r\n4\r\n`evaluate` not yet implemented.(idle)\r\n\r\nwhy i can't run...    what' the '`evaluate` not yet implemented.(idle)' meanning?", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49867"}, {"body": "Add a new refactoring that extracts a class or function to a new file next to the current one. For example, for the simple project:\r\n\r\n`code.ts`:\r\n\r\n```ts\r\nexport class Foo { }\r\nexport class Bar { }\r\n```\r\n\r\nIf the user highlights`Bar`, the `extract to new file` action would result in:\r\n\r\n`code.ts`:\r\n\r\n```ts\r\nexport class Foo { }\r\n```\r\n\r\n`bar.ts`:\r\n\r\n```ts\r\nexport class Bar { }\r\n```", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49866"}, {"body": "Issue Type: <b>Bug</b>\r\n\r\n![image](https://user-images.githubusercontent.com/227713/40030427-18f7afa4-581d-11e8-9dad-8d3e17a0f1b8.png)\r\n\r\n\r\n- it work fine before 1.21\r\n- repository: https://github.com/atian25/vscode-debug-brk\r\n- auto attach is off\r\n- \"autoAttachChildProcesses\": true\r\n\r\n```js\r\n// index.js\r\nconst cp = require('child_process');\r\n\r\ncp.fork('./agent', [], {\r\n  execArgv: process.execArgv.concat([ '--debug-port=5800' ]),\r\n});\r\n```\r\n\r\n```js\r\n// agent.js\r\nsetInterval(() => {\r\n  console.log('I am agent', process.pid);\r\n}, 5000);\r\n```\r\n\r\n```json\r\n{\r\n  \"version\": \"0.2.0\",\r\n  \"configurations\": [\r\n    {\r\n      \"name\": \"Debug\",\r\n      \"type\": \"node\",\r\n      \"request\": \"launch\",\r\n      \"cwd\": \"${workspaceRoot}\",\r\n      \"runtimeExecutable\": \"npm\",\r\n      \"windows\": {\r\n        \"runtimeExecutable\": \"npm.cmd\"\r\n      },\r\n      \"runtimeArgs\": [\r\n        \"run\",\r\n        \"debug\",\r\n        \"--\",\r\n        \"--inspect-brk\"\r\n      ],\r\n      \"console\": \"integratedTerminal\",\r\n      \"protocol\": \"auto\",\r\n      \"restart\": true,\r\n      \"port\": 9229,\r\n      \"autoAttachChildProcesses\": true\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n```json\r\n{\r\n  \"name\": \"vscode-debug-brk\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"\",\r\n  \"dependencies\": {\r\n  },\r\n  \"devDependencies\": {\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">=8.0.0\"\r\n  },\r\n  \"scripts\": {\r\n    \"debug\": \"node --inspect-brk index.js\"\r\n  }\r\n}\r\n```\r\n\r\n\r\nVS Code version: Code 1.23.0 (7c7da59c2333a1306c41e6e7b68d7f0caa7b3d45, 2018-05-03T15:23:14.634Z)\r\nOS version: Darwin x64 17.5.0\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-5557U CPU @ 3.10GHz (4 x 3100)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: enabled<br>rasterization: enabled<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|4, 6, 15|\r\n|Memory (System)|16.00GB (0.03GB free)|\r\n|Process Argv|/Applications/Visual Studio Code.app/Contents/MacOS/Electron -psn_0_53261|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (33)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nvscode-markdownlint|Dav|0.16.0\r\nbeautify|Hoo|1.3.0\r\noutput-colorizer|IBM|0.1.2\r\nvscode-mocha-two|Mys|1.2.1\r\nvscode-docker|Pet|0.0.26\r\nBookmarks|ale|0.19.1\r\nproject-manager|ale|0.25.2\r\ncopy-syntax|ati|0.5.1\r\neggjs|ati|0.3.1\r\nvscode-gpm|axe|0.16.2\r\nvscode-custom-css|be5|2.7.0\r\nvscode-eslint|dba|1.4.8\r\nvscode-npm-source|dku|1.0.0\r\ngithistory|don|0.4.1\r\ngitlens|eam|8.2.4\r\ntslint|eg2|1.0.28\r\nvscode-statusbar-debugger|fab|1.4.1\r\ncode-runner|for|0.9.3\r\npath-autocomplete|ion|1.9.0\r\nsearch-node-modules|jas|1.3.0\r\nplantuml|jeb|2.6.3\r\nvscode-mocha-sidebar|mat|0.19.0\r\nvsliveshare|ms-|0.3.114\r\ndebugger-for-chrome|msj|4.4.3\r\nnode-modules-resolve|nau|1.0.2\r\nvetur|oct|0.11.8\r\ngitlink|qez|0.4.2\r\nunittest-navigate|rob|0.0.2\r\npreview-vscode|sea|1.4.2\r\nes6-mocha-snippets|spo|0.1.3\r\ncode-navigation|vik|0.2.0\r\nJavaScriptSnippets|xab|1.6.0\r\nvscode-proto3|zxh|0.2.1\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49865"}, {"body": "I was working on a Vue project while received the latest update for my VScode . \r\nWhen I installed the update , the Emmet abbreviations did not work in my **vue template**.\r\nI tried emmet in ordinary html file and it works fine.\r\nI assume that something is wrong with the new update.\r\nDoes anyone has a solution or a working setup to share ?\r\n\r\nVersion 1.23.1\r\nCommit d0182c3417d225529c6d5ad24b7572815d0de9ac\r\nDate 2018-05-10T17:11:17.614Z\r\nShell 1.7.12\r\nRenderer 58.0.3029.110\r\nNode 7.9.0\r\nArchitecture x64\r\n\r\nExtensions:\r\nnpm-intellisense|chr|1.3.0\r\npath-intellisense|chr|1.4.2\r\nbracket-pair-colorizer|Coe|1.0.48\r\nvscode-eslint|dba|1.4.8\r\nvscode-npm-script|eg2|0.3.4\r\nprettier-vscode|esb|1.3.1\r\nauto-close-tag|for|0.5.6\r\ndebugger-for-chrome|msj|4.4.3\r\nvetur|oct|0.11.8\r\nmaterial-icon-theme|PKi|3.4.0\r\nLiveServer|rit|4.0.0\r\nautoimport|ste|1.5.3\r\nopen-in-browser|tec|1.1.0\r\nbootstrap4-vscode|the|4.1.1\r\nJavaScriptSnippets|xab|1.6.0", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49864"}, {"body": "- VSCode Version: 1.23.1\r\n- OS Version: MacOS High Sierra\r\n\r\nSteps to Reproduce:\r\n\r\n1. Use a logging LSP server\r\n2. notice that DocumentURI fields are all of the form `/path/on/disk` instead of `file:///path/on/disk`. This appears to be in violation of the specification (https://microsoft.github.io/language-server-protocol/specification#uri) and URI rfc.\r\n\r\nAlternative:\r\n\r\n1. install hhvm 3.26 and the `vscode-hack` extension\r\n2. put `use_hackfmt=true` in /etc/hh.conf or /usr/local/etc/hh.conf (if using homebrew)\r\n3. open the file below\r\n4. attempt to invoke formatting\r\n\r\n```Hack\r\n<?hh // strict\r\n\r\nfunction foo(string $abc, int $def, vec<string> $i_am_really_really_long_foo_bar_baz): void {\r\n}\r\n```\r\n\r\n5. failure\r\n\r\nDoes this issue occur when all extensions are disabled?: no", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49863"}, {"body": "The Search bar in the preferences file only filters preferences.\r\n\r\nThis means that you can't check for related preferences around the one you searched for.\r\n\r\nWhen you filter preferences there's also no indication where they may be in the default preferences file, since the filtering removes the categories from the view, and there's no way to jump to a particular preference.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49862"}, {"body": "VSCode toggles the keyboard focus between the main editor and the search view when you input the Search: Find in Files keyboard shortcut.\r\n\r\nThis means that if the cursor focus in on the search view and you don't notice it, inputting the Find keyboard shortcut brings the cursor *Back* to the editor instead of keeping it where it is, or selecting all text in the Search field, for example.\r\n\r\nI have been using VSCode for a while now and can't get used to this. Often a lot of random code gets written in the main editor without me noticing, since I usually expect keyboard shortcuts to have consistent behaviour.\r\n\r\nThe Esc key should be used to return focus to the main editor instead.\r\n\r\nOr at the very least this should be made into an option.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49861"}, {"body": "When searching for additional themes via the command palette's \"Install additional color themes...\" should carry the user's search terms into the search query:\r\n\r\n**Current**\r\n![image](https://user-images.githubusercontent.com/35271042/40024929-c75b8fb4-5784-11e8-8429-7196b0bcfade.gif)\r\n\r\n\r\n**Expected**\r\n![ezgif com-gif-maker 4](https://user-images.githubusercontent.com/35271042/40024935-ce316c5a-5784-11e8-9caa-b40cccb9c240.gif)", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49860"}, {"body": "Issue Type: <b>Feature Request</b>\r\n\r\nIn our Webpack configuration, we use directory-named-webpack-plugin to remove redundant segments from our file pathing.  i.e.\r\n\r\n`'components/Dropdown/Dropdown'` becomes `'components/Dropdown'`\r\n\r\nIt would be great if the IDE was able to understand this pathing and look for files named after their directory, rather than only looking exclusively for index.js files.\r\n\r\nI propose adding an option within jsconfig.json to support this functionality.\r\n\r\nVS Code version: Code 1.23.1 (d0182c3417d225529c6d5ad24b7572815d0de9ac, 2018-05-10T16:03:31.083Z)\r\nOS version: Darwin x64 17.4.0\r\n\r\n\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49857"}, {"body": "this is really difficult to read:\r\n\r\n![image](https://user-images.githubusercontent.com/1088194/40019909-744b4b16-5775-11e8-8530-17d5e381829f.png)\r\n\r\nand it's not obvious how to change that color.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49856"}, {"body": "I have set preferences:\r\n\r\n```\r\n\"terminal.integrated.shell.windows\": \"C:\\\\WINDOWS\\\\System32\\\\cmd.exe\",\r\n\"npm.bin\": \"c:\\\\node\\\\npm\",\r\n\"yarn.bin\": \"c:\\\\node\\\\yarn\",\r\n\"terminal.integrated.env.windows\": {\r\n  \"PATH\": \"c:\\\\node\\\\\"\r\n}\r\n```\r\n\r\nWhen I run npm, it finds my local node executable using the PATH variable.\r\nWhen I run yarn, it says that node executable cannot be found.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49850"}, {"body": "This C# grammar update fixes an issue with comments after property declarations\r\nsolved by https://github.com/dotnet/csharp-tmLanguage/pull/117.\r\n\r\ncc @rchande and @TheRealPiotrP", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49849"}, {"body": "<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version: 1.23.0\r\n- OS Version: Win 7 \r\n\r\nSteps to Reproduce:\r\n\r\n1. Run your build tast.\r\n2. When your app is running, run the build command again. A dialogue that says \"The task ... is already running\" pops up in the corner.\r\n3.1 Close the app by clicking the X in the window's corner. The dialogue is still there even though the app is closed.\r\n3.2. Restarting the app through a kb shortcut does not close the dialogue.\r\n3.3 Terminating the app through a kb shortcut does not close the dialogue.\r\n\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: \r\nMy project relies on extensions so could not test.\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49848"}, {"body": "I have been learning many languages in the years of experience... Code is really a good IDE and it is very light. i personally liked it, as per my experience i have been coding in Eclipse for many years.. and now from few years with Android Coding i have been using Intellij., \r\n\r\nCode should address to this issue that using shortcut keys is the most important for any developer. i am familiar with Eclipse shortcut keys so i simply change the settings to Eclipse in Intellij. if this feature is available in Code too this will be good. ", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49847"}, {"body": "<!--\r\nDo you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode.\r\n\r\nFor bug reports, please fill in the details below. For feature requests, please describe the desired feature.\r\n-->\r\n\r\n<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version: 1.23.1\r\n- OS Version: Microsoft Windows [Version 10.0.17666.1000]\r\n\r\nSteps to Reproduce:\r\n\r\n1. Open integrated terminal (cmd.exe or powershell.exe), type some random command, do not press enter.\r\n2. Press Ctrl+C\r\n\r\nExpected Behavior: \r\nDiscard previous command and start a new line\r\n> CMD\r\n> C:\\\\>blablabla <Ctrl+C>\r\n> C:\\\\>\r\n\r\nActual behavior: \r\nCMD -> Nothing happened\r\nPowershell -> add^C at the end of the command but does not start new line.\r\n\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: Yes\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49845"}, {"body": "Issue Type: <b>Bug</b>\r\n\r\n```\r\nimport ObjA from 'file';\r\n.......\r\nconst Objs = {\r\n  ObjA,\r\n};\r\n```\r\n\r\nCode like this. ObjA is being referenced but organizeImports still remove its import.\r\n\r\nVS Code version: Code 1.23.1 (d0182c3417d225529c6d5ad24b7572815d0de9ac, 2018-05-10T17:11:17.614Z)\r\nOS version: Windows_NT x64 10.0.16299\r\n\r\n</details>\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49844"}, {"body": "<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version: 1.23.1\r\n- OS Version: Mac OS High Sierra v10.13.4\r\n\r\nSteps to Reproduce:\r\n\r\n1. Open Quick Open `\u2318P`\r\n2. Search for a file\r\n3. Close Quick Open (or select a file)\r\n4. Open Quick Open `\u2318P`\r\n5. Last search value is gone\r\n\r\nDoes this issue occur when all extensions are disabled?: Yes/No\r\n\r\nIt would be great to preserve the last value of the Quick Open search field as I am usually searching for similarly named files when using Quick Open in quick succession.\r\n\r\nrefL https://github.com/Microsoft/vscode/issues/17163\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49840"}, {"body": "<!--\r\nDo you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode.\r\n\r\nFor bug reports, please fill in the details below. For feature requests, please describe the desired feature.\r\n--> When expanding an Emmet snippet with item numbering without specifying any multiplication operator the output stays as $ instead of replacing it with the number 1 \r\n\r\nTake the following snippet \"p{$}\"\r\n```\r\n**Output:** <p>$</p>\r\n**expected output:** <p>1</p>\r\n```\r\nHowever the following snippets give expected output \"p{$}*\" \"p{$}*1\"\r\n`**Output:** <p>1</p>`\r\n\r\n<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version: 1.23.1\r\n- OS Version: Windows 10 & Arch Linux\r\n\r\nSteps to Reproduce:\r\n\r\n1. Expand the following Emmet snippet p{$}\r\n2. Confirm the output is `<p>$</p>` instead of `<p>1</p>`\r\n\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: Yes/No\r\nYes", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49839"}, {"body": "Issue Type: <b>Bug</b>\r\n\r\nBom dia.\r\nUtilizo a extens\u00e3o ADVPL do colaborador killerall.\r\nAp\u00f3s atualizar a vers\u00e3o do VS Code, n\u00e3o cosigo mais usar a fun\u00e7\u00e3o 'Get Value' da aba 'Variables'.\r\nAs op\u00e7\u00f5es ficam desabilitadas.\r\n\r\nVS Code version: Code 1.23.1 (d0182c3417d225529c6d5ad24b7572815d0de9ac, 2018-05-10T17:11:17.614Z)\r\nOS version: Windows_NT x64 10.0.16299\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i5-3210M CPU @ 2.50GHz (4 x 2494)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: disabled_software<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: unavailable_software<br>webgl: enabled<br>webgl2: enabled|\r\n|Memory (System)|5.86GB (1.85GB free)|\r\n|Process Argv|C:\\Program Files\\Microsoft VS Code\\Code.exe|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (1)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nadvpl-vscode|Kil|0.8.2\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49837"}, {"body": "<!--\r\nDo you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode.\r\n\r\nFor bug reports, please fill in the details below. For feature requests, please describe the desired feature.\r\n-->\r\n\r\n<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version: 1.23.1\r\n- OS Version: Windows 10 Enterprise  v1703\r\n\r\nThere is no color highlighting when I run maven inside the vscode terminal. \r\nI would think that this is a maven bug, but the highlighting works flawlessly when I run it from the windows or Git Bash command prompt.\r\n\r\nSteps to Reproduce:\r\n\r\nRunning mvn in the windows command prompt or Git Bash shows the colors correctly.\r\nRunning jest also shows the colors correctly in vscode.\r\nRunning `echo -e \"Default \\e[36mCyan\"` also works and shows the color correctly.\r\n**Running  `mvn` or `mvn.cmd` in the vscode terminal prints the color codes instead of showing colored text.**\r\n\r\nOutput:\r\n```\r\n[?[1;34mINFO?[m] ?[1m------------------------------------------------------------------------?[m\r\n[?[1;34mINFO?[m] ?[1;32mBUILD SUCCESS?[m\r\n[?[1;34mINFO?[m] ?[1m------------------------------------------------------------------------?[m\r\n[?[1;34mINFO?[m] Total time: 53.568 s\r\n[?[1;34mINFO?[m] Finished at: 2018-05-14T16:08:50+02:00\r\n[?[1;34mINFO?[m] ?[1m------------------------------------------------------------------------?[m\r\n```\r\n\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: Yes\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49834"}, {"body": "\r\nIssue Type: <b>Bug</b>\r\n\r\nwhile testing out the liveshare plugin CTRL+Z got stuck and removed all our progress, we think this issue has to do with the fact that one of us had format on save enabled and the other didn't\r\n\r\nVS Code version: Code 1.23.0 (7c7da59c2333a1306c41e6e7b68d7f0caa7b3d45, 2018-05-03T16:44:55.614Z)\r\nOS version: Windows_NT x64 6.3.9600\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-4720HQ CPU @ 2.60GHz (8 x 2594)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: disabled_software<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: unavailable_software<br>webgl: enabled<br>webgl2: enabled|\r\n|Memory (System)|15.92GB (11.48GB free)|\r\n|Process Argv|C:\\Program Files\\Microsoft VS Code\\Code.exe|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (27)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nhtml-snippets|abu|0.2.1\r\np5js-snippets|aci|0.0.6\r\nnpm-intellisense|chr|1.3.0\r\nvscode-markdownlint|Dav|0.16.0\r\nvscode-eslint|dba|1.4.8\r\nline-counter|dol|0.5.2\r\ngitlens|eam|8.2.4\r\nvscode-npm-script|eg2|0.3.4\r\nlive-p5|fil|1.1.0\r\nauto-rename-tag|for|0.0.15\r\nbeautify|Hoo|1.3.0\r\nlatex-workshop|Jam|5.3.3\r\ndocthis|joe|0.6.0\r\nvue|liu|0.1.5\r\nsftp|lix|1.1.7\r\nvscode-mocha-sidebar|mat|0.19.0\r\npython|ms-|2018.4.0\r\nPowerShell|ms-|1.7.0\r\nvsliveshare|ms-|0.3.98\r\ndebugger-for-chrome|msj|4.4.3\r\nvetur|oct|0.11.7\r\nmaterial-icon-theme|PKi|3.4.0\r\nvscode-yaml|red|0.0.11\r\nvscode-icons|rob|7.23.0\r\nvscode-paste-and-indent|Rub|0.0.8\r\nvue-vscode-snippets|sdr|1.3.0\r\nbackground|sha|1.1.17\r\n\r\n(3 theme extensions excluded)\r\n\r\n</details>\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49833"}, {"body": "In VSCode version 1.22, with the go extension, the autoformat of a go file was working smoothly. After I updated to 1.23 it stopped working.\r\n\r\n- VSCode Version: 1.23\r\n- OS Version: Ubuntu 16.04\r\n\r\nSteps to Reproduce:\r\n\r\n1. Open a go file without indentation\r\n2. Save it. It won't format\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49831"}, {"body": "Is there a chance to highlight PHP, JS and HTML code segments that are mixed in a single php file?\r\nAlso, the syntax keywords are not highlighted in these files as well.\r\n\r\nFor example, on the screen shot below there is the comparison of VS Code layout and layout of another text editor. The Notepad editor marks PHP and JS code segments each with its own color, so it is extremely easy to distinguish one from another one\r\n![image](https://user-images.githubusercontent.com/31000984/40000460-82bcd8ee-5794-11e8-860d-e4c7418e31f9.png)\r\nThe color theme used is standard \"Light+\"\r\n\r\nAs FE developer I'm facing such mix quite often. The VS Code is perfect, but at the moment it is very hard to work with such PHP files due to lack of visibility.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49830"}, {"body": "Issue Type: <b>Bug</b>\r\n\r\nGiven is the following NodeJS code:\r\n```js\r\n\"use strict\";\r\n\r\nconst subject = {\r\n  foo: new ArrayBuffer(1024 * 1024),\r\n  bar: new Array()\r\n};\r\n\r\nfor (let iteration = 0; iteration < 1024 * 1024; ++iteration) {\r\n  subject.bar[iteration] = iteration;\r\n}\r\n\r\nconsole.log(subject.bar[1337]);\r\n\r\nconsole.log(\"Done\");\r\n```\r\n\r\nRunning this code should finish instantly and print `1337` and `Done`.\r\n\r\nNow add a new breakpoint on the line `subject.bar[iteration] = iteration;` and set a condition of `!subject`.\r\n\r\nWhen you now run the file in the NodeJS debugger, it will apparently run forever. Memory usage of the VS Code process will increase towards 4 GB at which point the debug adapter will crash.\r\n\r\nAt least it crashes in my main application. I only watched this minimal example rise to 2 GB, but I'm sure it's the same cause and a crash can be provoked by running more iterations.\r\n\r\nVS Code version: Code 1.23.1 (d0182c3417d225529c6d5ad24b7572815d0de9ac, 2018-05-10T17:11:17.614Z)\r\nOS version: Windows_NT x64 10.0.17134\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-6850K CPU @ 3.60GHz (12 x 3672)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: disabled_software<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Memory (System)|63.91GB (40.55GB free)|\r\n|Process Argv|C:\\Program Files\\Microsoft VS Code\\Code.exe landslide/landslide.code-workspace|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (10)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\npascal|ale|0.11.0\r\nbracket-pair-colorizer|Coe|1.0.48\r\nvscode-eslint|dba|1.4.8\r\nEditorConfig|Edi|0.12.1\r\nvscode-esformatter|how|1.6.0\r\noutput-colorizer|IBM|0.1.2\r\ninnosetup|idl|1.0.3\r\nvscode-lebab|mrm|2.5.0\r\nvscode-puglint|mrm|2.3.0\r\ndebugger-for-chrome|msj|4.4.3\r\n\r\n(1 theme extensions excluded)\r\n\r\n</details>\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49829"}, {"body": "Running a task in a VS Code build from source results in the following exception:\r\n\r\n```\r\n[12628:0514/152135.393:INFO:CONSOLE(45)] \"TypeError: Failed to execute 'getComputedStyle' on 'Window': parameter 1 is not of type 'Element'.\r\n    at TerminalInstance.setVisible (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/electron-browser/terminalInstance.js:541:48)\r\n    at file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/electron-browser/terminalInstance.js:420:23\r\n    at Promise_ctor.CompletePromise_then [as then] (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/base/common/winjs.base.js:1581:49)\r\n    at TerminalInstance._attachToElement (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/electron-browser/terminalInstance.js:331:37)\r\n    at TerminalInstance.attachToElement (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/electron-browser/terminalInstance.js:321:22)\r\n    at new SplitPane (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/browser/terminalTab.js:203:27)\r\n    at SplitPaneContainer._addChild (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/browser/terminalTab.js:123:25)\r\n    at SplitPaneContainer.split (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/browser/terminalTab.js:60:18)\r\n    at file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/browser/terminalTab.js:348:103\r\n    at Array.forEach (native)\r\n    at TerminalTab.attachToElement (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/browser/terminalTab.js:348:40)\r\n    at file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/electron-browser/terminalService.js:250:68\r\n    at Array.forEach (native)\r\n    at TerminalService.setContainers (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/electron-browser/terminalService.js:250:32)\r\n    at TerminalPanel.create (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/electron-browser/terminalPanel.js:53:35)\r\n    at Builder.<anonymous> (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/browser/parts/compositePart.js:149:56)\r\n    at Builder.doElement (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/base/browser/builder.js:253:20)\r\n    at Builder.div (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/base/browser/builder.js:155:25)\r\n    at PanelPart.CompositePart.showComposite (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/browser/parts/compositePart.js:145:52)\r\n    at file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/browser/parts/compositePart.js:89:30\r\n    at CompletePromise_ctor.CompletePromise_then [as then] (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/base/common/winjs.base.js:1581:49)\r\n    at PanelPart.CompositePart.doOpenComposite (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/browser/parts/compositePart.js:71:32)\r\n    at PanelPart.CompositePart.openComposite (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/browser/parts/compositePart.js:56:25)\r\n    at file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/browser/parts/panel/panelPart.js:110:60\r\n    at CompletePromise_ctor.CompletePromise_then [as then] (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/base/common/winjs.base.js:1581:49)\r\n    at PanelPart.openPanel (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/browser/parts/panel/panelPart.js:110:28)\r\n    at file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/common/terminalService.js:295:48\r\n    at new Promise_ctor (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/base/common/winjs.base.js:1656:17)\r\n    at TerminalService.showPanel (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/common/terminalService.js:292:20)\r\n    at file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/tasks/electron-browser/terminalTaskSystem.js:209:59\r\n    at Emitter.fire (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/base/common/event.js:103:38)\r\n    at WatchingProblemCollector.tryFinish (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/tasks/common/problemCollectors.js:427:48)\r\n    at WatchingProblemCollector.processLine (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/tasks/common/problemCollectors.js:367:45)\r\n    at file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/tasks/electron-browser/terminalTaskSystem.js:223:48\r\n    at file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/electron-browser/terminalInstance.js:735:21\r\n    at Array.forEach (native)\r\n    at TerminalInstance._sendLineData (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/electron-browser/terminalInstance.js:733:39)\r\n    at TerminalInstance._onLineFeed (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/electron-browser/terminalInstance.js:725:22)\r\n    at Terminal.<anonymous> (file:///C:/Users/dirkb/Projects/mseng/VSCode/vscode/out/vs/workbench/parts/terminal/electron-browser/terminalInstance.js:290:83)\r\n    at Terminal.EventEmitter.emit (C:\\Users\\dirkb\\Projects\\mseng\\VSCode\\vscode\\node_modules\\vscode-xterm\\lib\\EventEmitter.js:52:20)\r\n    at InputHandler.lineFeed (C:\\Users\\dirkb\\Projects\\mseng\\VSCode\\vscode\\node_modules\\vscode-xterm\\lib\\InputHandler.js:92:24)\r\n    at Object.normalStateHandler.(anonymous function) (C:\\Users\\dirkb\\Projects\\mseng\\VSCode\\vscode\\node_modules\\vscode-xterm\\lib\\Parser.js:7:91)\r\n    at Parser.parse (C:\\Users\\dirkb\\Projects\\mseng\\VSCode\\vscode\\node_modules\\vscode-xterm\\lib\\Parser.js:184:47)\r\n    at Terminal._innerWrite (C:\\Users\\dirkb\\Projects\\mseng\\VSCode\\vscode\\node_modules\\vscode-xterm\\lib\\Terminal.js:827:38)\r\n```", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49828"}, {"body": "Issue Type: <b>Feature Request</b>\r\n\r\nI have an unknown issue where NodeJS will exit and I only get a bubble saying:\r\n\r\n> Debug adapter process has terminated unexpectedly\r\n\r\nThis is not helpful. I don't understand what is happening and I'm not even seeing what NodeJS wrote to stdout/stderr, which might help me understand the situation.\r\n\r\nIt's additionally confusing because the handling of this unexpected issue is happening silently. So while I'm still watching my browser, NodeJS has already exited and VS Code knows that. I feel like this is one of the situations where it would be acceptable to draw attention to the application.\r\n\r\nVS Code version: Code 1.23.1 (d0182c3417d225529c6d5ad24b7572815d0de9ac, 2018-05-10T17:11:17.614Z)\r\nOS version: Windows_NT x64 10.0.17134\r\n\r\n\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49827"}, {"body": "Adds clarity to the extension details by adding tooltips, as mentioned in #47586.\r\n![extension-navbar-tooltip](https://user-images.githubusercontent.com/7311695/39997746-39f5ea84-5784-11e8-9725-b9e9cb98f8c1.png)\r\n\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49825"}, {"body": "Many web browsers either natively support the use of mouse gestures or have extensions that enable this. (E.g. Vivaldi Natively, Microsoft Edge has an official Microsoft Web Extension for this).\r\n\r\nA mouse gesture is the ability to hold a modifier key (commonly Right Click) and move the mouse in a direction, and upon letting go of the modifier, a command will be carried out.\r\n\r\nExample use cases:\r\n* Hold Right Click, Move mouse down, then to the right to: close a tab.\r\n* Hold Right Click, Move mouse up, then to the right to: start a debug task\r\n\r\nThis could also be combined with a scrolling movement, as the editor Notepad++ Supports:\r\n* Hold Right Click, Scroll Up to: Cycle to the tab to the left of current\r\n\r\nAnother common use case is the Rocker Getsure:\r\n* Hold Right Click, Click Left to: Go back (alternative to Alt+Left)\r\n\r\nMore information:\r\n* Wikipedia: https://en.wikipedia.org/wiki/Pointing_device_gesture & https://en.wikipedia.org/wiki/Mouse_chording\r\n* Edge Extension: https://www.microsoft.com/en-us/store/p/mouse-gestures/9nblggh4nkf9\r\n* Vivaldi Implementation: https://help.vivaldi.com/article/mouse-gestures/\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49823"}, {"body": "<!--\r\nDo you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode.\r\n\r\nFor bug reports, please fill in the details below. For feature requests, please describe the desired feature.\r\n-->\r\n\r\n<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version: >= 1.20\r\n- OS Version: Win10 (1803) & Ubuntu (14.04)\r\n\r\nSteps to Reproduce:\r\nI am an extension author and am utilizing the custom tree view API. In my ext I am binding on\r\n```\r\n        vscode.window.onDidChangeActiveTextEditor((ev?: vscode.TextEditor) => {\r\n            if (vscode.window.activeTextEditor) {\r\n                this.refresh(vscode.window.activeTextEditor.document);\r\n            }\r\n        });\r\n        vscode.workspace.onDidSaveTextDocument((document) => this.refresh(document));\r\n        vscode.workspace.onDidOpenTextDocument((document) => this.refresh(document));\r\n        vscode.workspace.onDidCloseTextDocument((document) => this.refresh(document));\r\n```\r\n\r\n1. Hold down `ctrl` and hover on a symbol\r\n2. The tree view updates with the symbols of the hovered element's file\r\n3. Move the mouse away from the symbol\r\n\r\nExpected: The view to update to the currently open file\r\nActual: The view stays with the contents of the previously hovered file\r\n\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: No (as extension is not loaded)\r\n\r\nIs this the intended behaviour or not, since it seems that the `onDidChangeActiveTextEditor` is not triggered on mouse leave. \r\n\r\nAm I doing something wrong? ", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49821"}, {"body": "In my User Settings, I have set:\r\n\r\n```\r\n\"zenMode.hideActivityBar\": true,\r\n\"workbench.activityBar.visible\": false,\r\n```\r\n\r\nHowever, the activity bar is still there.\r\n\r\nFurthermore, when I look at the _View_ menu, the option reads 'Show Activity Bar'. When I click 'Show Activity Bar', nothing happens. My User Settings are not modified, and the option remains 'Show Activity Bar'.\r\n\r\n---\r\nI have tried on both of the following versions:\r\n```\r\n# VSCode Insider\r\nVersion 1.24.0-insider\r\nCommit 5d12f53178b72e88431347f8e248c49335a7fefc\r\nDate 2018-05-14T05:11:05.143Z\r\nShell 1.7.12\r\nRenderer 58.0.3029.110\r\nNode 7.9.0\r\nArchitecture x64\r\n\r\n# VSCode\r\nVersion 1.23.0\r\nCommit 7c7da59c2333a1306c41e6e7b68d7f0caa7b3d45\r\nDate 2018-05-03T15:23:19.356Z\r\nShell 1.7.12\r\nRenderer 58.0.3029.110\r\nNode 7.9.0\r\nArchitecture x64\r\n```\r\n\r\n\r\nSteps to Reproduce:\r\n\r\n1. Open Editor\r\n2. Right-Click on the activity bar\r\n3. Select 'Hide Activity Bar'\r\n\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: **Yes**\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49820"}, {"body": "\r\nIssue Type: <b>Bug</b>\r\n\r\nWhen i opened the page\"https://github.com/Microsoft/vscode/milestone/70?closed=1\" from change log(1.23.1), i can't see anything.\r\n\r\n\r\nVS Code version: Code 1.23.1 (d0182c3417d225529c6d5ad24b7572815d0de9ac, 2018-05-10T17:11:17.614Z)\r\nOS version: Windows_NT x64 6.1.7601\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i5-6500 CPU @ 3.20GHz (4 x 3192)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: disabled_software<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: unavailable_software<br>webgl: enabled<br>webgl2: enabled|\r\n|Memory (System)|7.94GB (0.89GB free)|\r\n|Process Argv|D:\\Pro\\Microsoft VS Code\\Code.exe|\r\n|Screen Reader|no|\r\n|VM|50%|\r\n\r\n</details><details><summary>Extensions (45)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nlua-debug|act|0.3.3\r\nBookmarks|ale|0.19.1\r\ncode-gnu-global|aus|0.2.2\r\nvscode-database|baj|1.5.1\r\npath-intellisense|chr|1.4.2\r\nvscode-svgviewer|css|1.4.4\r\nvscode-markdownlint|Dav|0.16.0\r\nvscode-eslint|dba|1.4.8\r\nvscode-hasher|dee|1.0.1\r\njupyter|don|1.1.4\r\nxml|Dot|1.9.2\r\ngitlens|eam|8.2.4\r\ntslint|eg2|1.0.28\r\nfile-icons|fil|1.0.12\r\ncode-runner|for|0.9.3\r\ngc-excelviewer|Gra|2.0.21\r\nbeautify|Hoo|1.3.0\r\nnsis|idl|3.13.2\r\nlatex-workshop|Jam|5.3.3\r\nLua|key|0.0.9\r\ncmake-tools-helper|mad|0.2.1\r\nvscode-clang|mit|0.2.2\r\necdc|mit|0.12.0\r\nvscode-language-pack-zh-hans|MS-|1.23.4\r\nmssql|ms-|1.3.1\r\npython|ms-|2018.4.0\r\nvscode-ai|ms-|0.1.8\r\ncpptools|ms-|0.17.0\r\ncsharp|ms-|1.15.1\r\nGo|ms-|0.6.79\r\nPowerShell|ms-|1.7.0\r\ndebugger-for-chrome|msj|4.4.3\r\ncolor-highlight|nau|2.3.0\r\nvscode-code-outline|pat|0.2.0\r\nqub-xml-vscode|qub|1.2.8\r\njava|red|0.24.0\r\nvscode-icons|rob|7.23.0\r\ncode-settings-sync|Sha|2.9.2\r\nshader|sle|1.1.3\r\nvscode-lua|tri|0.12.4\r\ncmake|twx|0.0.17\r\nunity-debug|Uni|1.3.0\r\ncmake-tools|vec|0.11.1\r\nvscode-redis|vit|1.2.0\r\nvscode-java-debug|vsc|0.9.0\r\n\r\n(1 theme extensions excluded)\r\n\r\n</details>\r\n<!-- generated by issue reporter -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49819"}, {"body": "The tooltip for `Uri.parse` says \"Will throw if the given value is not valid\", however it seems to accept all sorts of things that I wouldn't expect to be valid (eg. no protocol or invalid domains).\r\n\r\n```ts\r\nconsole.log(\"Testing URIs\");\r\nconsole.log(Uri.parse(\"d\").toString());\r\nconsole.log(Uri.parse(\"\").toString());\r\nconsole.log(Uri.parse(\"0\").toString());\r\nconsole.log(Uri.parse(\"-test.com\").toString());\r\nconsole.log(Uri.parse(\"test-.com\").toString());\r\nconsole.log(Uri.parse(\"http://test-.com/\").toString());\r\nconsole.log(\"Nothing threw\");\r\n```\r\n\r\nOutputs:\r\n\r\n```\r\nTesting URIs\r\nd\r\n\r\n0\r\n-test.com\r\ntest-.com\r\nhttp://test-.com/\r\nNothing threw\r\n```", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49818"}, {"body": "Code sits in the `joh/outline`-branch: https://github.com/Microsoft/vscode/blob/joh/outline/src/vs/workbench/parts/outline/electron-browser/outline.contribution.ts#L22 \r\n\r\n* have the command below which opens and focuses my custom view\r\n* bind the command to a user keybinding\r\n* invoke the command\r\n* \ud83d\udc1b the explorer shows but also takes focus\r\n\r\n```ts\r\nCommandsRegistry.registerCommand('outline.focus', accessor => {\r\n\tlet viewsService = accessor.get(IViewsService);\r\n\treturn viewsService.openView(_outlineDesc.id, true);\r\n});\r\n```", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49816"}, {"body": "<!--\r\nDo you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode.\r\n\r\nFor bug reports, please fill in the details below. For feature requests, please describe the desired feature.\r\n-->\r\n\r\n<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version: 1.23.0\r\n- OS Version: Windows 7 x64\r\n\r\n\r\nhelloworld.cpp\r\n```c\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(int argc, char const *argv[])\r\n{\r\n    cout<<\"Hello World\"<<endl;\r\n    return 0;\r\n}\r\n```\r\ngcc version:\r\n```\r\nC:\\Users\\Administrator>gcc -v\r\nUsing built-in specs.\r\nCOLLECT_GCC=gcc\r\nCOLLECT_LTO_WRAPPER=C:/LLVM/bin/../libexec/gcc/x86_64-w64-mingw32/7.2.0/lto-wrap\r\nper.exe\r\nTarget: x86_64-w64-mingw32\r\nConfigured with: ../../../src/gcc-7.2.0/configure --host=x86_64-w64-mingw32 --bu\r\nild=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --prefix=/mingw64 --with-sysr\r\noot=/c/mingw720/x86_64-720-posix-seh-rt_v5-rev0/mingw64 --enable-shared --enable\r\n-static --disable-multilib --enable-languages=c,c++,fortran,lto --enable-libstdc\r\nxx-time=yes --enable-threads=posix --enable-libgomp --enable-libatomic --enable-\r\nlto --enable-graphite --enable-checking=release --enable-fully-dynamic-string --\r\nenable-version-specific-runtime-libs --enable-libstdcxx-filesystem-ts=yes --disa\r\nble-libstdcxx-pch --disable-libstdcxx-debug --enable-bootstrap --disable-rpath -\r\n-disable-win32-registry --disable-nls --disable-werror --disable-symvers --with-\r\ngnu-as --with-gnu-ld --with-arch=nocona --with-tune=core2 --with-libiconv --with\r\n-system-zlib --with-gmp=/c/mingw720/prerequisites/x86_64-w64-mingw32-static --wi\r\nth-mpfr=/c/mingw720/prerequisites/x86_64-w64-mingw32-static --with-mpc=/c/mingw7\r\n20/prerequisites/x86_64-w64-mingw32-static --with-isl=/c/mingw720/prerequisites/\r\nx86_64-w64-mingw32-static --with-pkgversion='x86_64-posix-seh-rev0, Built by Min\r\nGW-W64 project' --with-bugurl=https://sourceforge.net/projects/mingw-w64 CFLAGS=\r\n'-O2 -pipe -fno-ident -I/c/mingw720/x86_64-720-posix-seh-rt_v5-rev0/mingw64/opt/\r\ninclude -I/c/mingw720/prerequisites/x86_64-zlib-static/include -I/c/mingw720/pre\r\nrequisites/x86_64-w64-mingw32-static/include' CXXFLAGS='-O2 -pipe -fno-ident -I/\r\nc/mingw720/x86_64-720-posix-seh-rt_v5-rev0/mingw64/opt/include -I/c/mingw720/pre\r\nrequisites/x86_64-zlib-static/include -I/c/mingw720/prerequisites/x86_64-w64-min\r\ngw32-static/include' CPPFLAGS=' -I/c/mingw720/x86_64-720-posix-seh-rt_v5-rev0/mi\r\nngw64/opt/include -I/c/mingw720/prerequisites/x86_64-zlib-static/include -I/c/mi\r\nngw720/prerequisites/x86_64-w64-mingw32-static/include' LDFLAGS='-pipe -fno-iden\r\nt -L/c/mingw720/x86_64-720-posix-seh-rt_v5-rev0/mingw64/opt/lib -L/c/mingw720/pr\r\nerequisites/x86_64-zlib-static/lib -L/c/mingw720/prerequisites/x86_64-w64-mingw3\r\n2-static/lib '\r\nThread model: posix\r\ngcc version 7.2.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project)\r\n```\r\n\r\ngdb verson:\r\n```\r\nGNU gdb (GDB) 8.0.1\r\nCopyright (C) 2017 Free Software Foundation, Inc.\r\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\r\nThis is free software: you are free to change and redistribute it.\r\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\r\nand \"show warranty\" for details.\r\nThis GDB was configured as \"x86_64-w64-mingw32\".\r\nType \"show configuration\" for configuration details.\r\nFor bug reporting instructions, please see:\r\n<http://www.gnu.org/software/gdb/bugs/>.\r\nFind the GDB manual and other documentation resources online at:\r\n<http://www.gnu.org/software/gdb/documentation/>.\r\nFor help, type \"help\".\r\nType \"apropos word\" to search for commands related to \"word\".\r\n```\r\n\r\nlaunch.json\r\n```json\r\n{\r\n    \"version\": \"0.2.0\",\r\n    \"configurations\": [\r\n        {\r\n            \"name\": \"(gdb) Launch\", // \u914d\u7f6e\u540d\u79f0\uff0c\u5c06\u4f1a\u5728\u542f\u52a8\u914d\u7f6e\u7684\u4e0b\u62c9\u83dc\u5355\u4e2d\u663e\u793a\r\n            \"type\": \"cppdbg\", // \u914d\u7f6e\u7c7b\u578b\uff0c\u8fd9\u91cc\u53ea\u80fd\u4e3acppdbg\r\n            \"request\": \"launch\", // \u8bf7\u6c42\u914d\u7f6e\u7c7b\u578b\uff0c\u53ef\u4ee5\u4e3alaunch\uff08\u542f\u52a8\uff09\u6216attach\uff08\u9644\u52a0\uff09\r\n            \"program\": \"${fileDirname}\\\\${fileBasenameNoExtension}.exe\", // \u5c06\u8981\u8fdb\u884c\u8c03\u8bd5\u7684\u7a0b\u5e8f\u7684\u8def\u5f84\r\n            \"args\": [], // \u7a0b\u5e8f\u8c03\u8bd5\u65f6\u4f20\u9012\u7ed9\u7a0b\u5e8f\u7684\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u4e00\u822c\u8bbe\u4e3a\u7a7a\u5373\u53ef\r\n            \"stopAtEntry\": false, // \u8bbe\u4e3atrue\u65f6\u7a0b\u5e8f\u5c06\u6682\u505c\u5728\u7a0b\u5e8f\u5165\u53e3\u5904\uff0c\u6211\u4e00\u822c\u8bbe\u7f6e\u4e3atrue\r\n            \"cwd\": \"${workspaceFolder}\", // \u8c03\u8bd5\u7a0b\u5e8f\u65f6\u7684\u5de5\u4f5c\u76ee\u5f55workspaceFolder\r\n            \"environment\": [], // \uff08\u73af\u5883\u53d8\u91cf\uff1f\uff09\r\n            \"externalConsole\": true, // \u8c03\u8bd5\u65f6\u662f\u5426\u663e\u793a\u63a7\u5236\u53f0\u7a97\u53e3\uff0c\u4e00\u822c\u8bbe\u7f6e\u4e3atrue\u663e\u793a\u63a7\u5236\u53f0\r\n            \"internalConsoleOptions\": \"neverOpen\", // \u5982\u679c\u4e0d\u8bbe\u4e3aneverOpen\uff0c\u8c03\u8bd5\u65f6\u4f1a\u8df3\u5230\u201c\u8c03\u8bd5\u63a7\u5236\u53f0\u201d\u9009\u9879\u5361\uff0c\u4f60\u5e94\u8be5\u4e0d\u9700\u8981\u5bf9gdb\u624b\u52a8\u8f93\u547d\u4ee4\u5427\uff1f\r\n            \"MIMode\": \"gdb\", // \u6307\u5b9a\u8fde\u63a5\u7684\u8c03\u8bd5\u5668\uff0c\u53ef\u4ee5\u4e3agdb\u6216lldb\u3002\u4f46\u76ee\u524dlldb\u5728windows\u4e0b\u6ca1\u6709\u9884\u7f16\u8bd1\u597d\u7684\u7248\u672c\u3002\r\n            \"miDebuggerPath\": \"C:\\\\LLVM\\\\bin\\\\gdb.exe\", // \u8c03\u8bd5\u5668\u8def\u5f84\u3002\r\n            \"setupCommands\": [\r\n                {\r\n                    \"description\": \"Enable pretty-printing for gdb\",\r\n                    \"text\": \"-enable-pretty-printing\",\r\n                    \"ignoreFailures\": false\r\n                }\r\n            ],\r\n            \"preLaunchTask\": \"Compile\" // \u8c03\u8bd5\u4f1a\u8bdd\u5f00\u59cb\u524d\u6267\u884c\u7684\u4efb\u52a1\uff0c\u4e00\u822c\u4e3a\u7f16\u8bd1\u7a0b\u5e8f\u3002\u4e0etasks.json\u7684label\u76f8\u5bf9\u5e94\r\n        }\r\n    ]\r\n}\r\n```\r\ntasks.jason\r\n```json\r\n{\r\n    \"version\": \"2.0.0\",\r\n    \"tasks\": [\r\n        {\r\n            \"label\": \"Compile\", // \u4efb\u52a1\u540d\u79f0\uff0c\u4e0elaunch.json\u7684preLaunchTask\u76f8\u5bf9\u5e94\r\n            \"command\": \"C:/LLVM/bin/clang++\", // \u8981\u4f7f\u7528\u7684\u7f16\u8bd1\u5668\r\n            \"args\": [\r\n                \"${file}\",\r\n                \"-o\", // \u6307\u5b9a\u8f93\u51fa\u6587\u4ef6\u540d\uff0c\u4e0d\u52a0\u8be5\u53c2\u6570\u5219\u9ed8\u8ba4\u8f93\u51faa.exe\r\n                \"${fileDirname}\\\\${fileBasenameNoExtension}.exe\",\r\n                \"-g\", // \u751f\u6210\u548c\u8c03\u8bd5\u6709\u5173\u7684\u4fe1\u606f\r\n                \"-Wall\", // \u5f00\u542f\u989d\u5916\u8b66\u544a\r\n                \"-static-libgcc\", // \u9759\u6001\u94fe\u63a5\r\n                \"-fcolor-diagnostics\",\r\n                \"--target=x86_64-w64-mingw\", // \u9ed8\u8ba4target\u4e3amsvc\uff0c\u4e0d\u52a0\u8fd9\u4e00\u6761\u5c31\u4f1a\u627e\u4e0d\u5230\u5934\u6587\u4ef6\r\n                \"-std=c++17\" // C\u8bed\u8a00\u6700\u65b0\u6807\u51c6\u4e3ac11\uff0c\u6216\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u8fdb\u884c\u4fee\u6539\r\n            ], // \u7f16\u8bd1\u547d\u4ee4\u53c2\u6570\r\n            \"type\": \"shell\",\r\n            \"group\": {\r\n                \"kind\": \"build\",\r\n                \"isDefault\": true // \u8bbe\u4e3afalse\u53ef\u505a\u5230\u4e00\u4e2atasks.json\u914d\u7f6e\u591a\u4e2a\u7f16\u8bd1\u6307\u4ee4\uff0c\u9700\u8981\u81ea\u5df1\u4fee\u6539\u672c\u6587\u4ef6\uff0c\u6211\u8fd9\u91cc\u4e0d\u591a\u63d0\r\n            },\r\n            \"presentation\": {\r\n                \"echo\": true,\r\n                \"reveal\": \"always\", // \u5728\u201c\u7ec8\u7aef\u201d\u4e2d\u663e\u793a\u7f16\u8bd1\u4fe1\u606f\u7684\u7b56\u7565\uff0c\u53ef\u4ee5\u4e3aalways\uff0csilent\uff0cnever\u3002\u5177\u4f53\u53c2\u89c1VSC\u7684\u6587\u6863\r\n                \"focus\": false, // \u8bbe\u4e3atrue\u540e\u53ef\u4ee5\u4f7f\u6267\u884ctask\u65f6\u7126\u70b9\u805a\u96c6\u5728\u7ec8\u7aef\uff0c\u4f46\u5bf9\u7f16\u8bd1c\u548cc++\u6765\u8bf4\uff0c\u8bbe\u4e3atrue\u6ca1\u6709\u610f\u4e49\r\n                \"panel\": \"shared\" // \u4e0d\u540c\u7684\u6587\u4ef6\u7684\u7f16\u8bd1\u4fe1\u606f\u5171\u4eab\u4e00\u4e2a\u7ec8\u7aef\u9762\u677f\r\n            }\r\n            // \"problemMatcher\":\"$gcc\" // \u5982\u679c\u4f60\u4e0d\u4f7f\u7528clang\uff0c\u53bb\u6389\u524d\u9762\u7684\u6ce8\u91ca\u7b26\uff0c\u5e76\u5728\u4e0a\u4e00\u6761\u4e4b\u540e\u52a0\u4e2a\u9017\u53f7\u3002\u7167\u7740\u6211\u7684\u6559\u7a0b\u505a\u7684\u4e0d\u9700\u8981\u6539\uff08\u4e5f\u53ef\u4ee5\u628a\u8fd9\u884c\u5220\u53bb)\r\n        }\r\n    ]\r\n}\r\n```\r\nterminal output:\r\n```json\r\n> Executing task: C:/LLVM/bin/clang++ c:\\2\\helloworld.cpp -o c:\\2\\helloworld.exe -g -Wall -static-libgcc -fcolor-diagnostics --target=x86_64-w64-mingw -std=c++17 <\r\n\r\n\r\nTerminal will be reused by tasks, press any key to close it.\r\n\r\n```\r\nouput files:\r\n![image](https://user-images.githubusercontent.com/24272401/39953151-d17605d2-55d7-11e8-8d57-263a113b8847.png)\r\n\r\nc_cpp_properties.jason:\r\n```json\r\n{\r\n    \"configurations\": [\r\n        {\r\n            \"name\": \"Win32\",\r\n            \"browse\": {\r\n                \"path\": [\r\n                    \"${workspaceFolder}\",\r\n                    \"C:\\\\LLVM\\\\lib\\\\gcc\\\\x86_64-w64-mingw32\",\r\n                    \"C:\\\\LLVM\\\\x86_64-w64-mingw32\\\\include\"\r\n                ],\r\n                \"limitSymbolsToIncludedHeaders\": true\r\n            },\r\n            \"includePath\": [\r\n                \"${workspaceFolder}\",\r\n                \"C:/LLVM/lib/gcc/x86_64-w64-mingw32/7.2.0/include/c++\",\r\n                \"C:/LLVM/lib/gcc/x86_64-w64-mingw32/7.2.0/include/c++/x86_64-w64-mingw32\",\r\n                \"C:/LLVM/lib/gcc/x86_64-w64-mingw32/7.2.0/include/c++/tr1\",\r\n                \"C:/LLVM/x86_64-w64-mingw32/include\"\r\n            ],\r\n            \"defines\": [\r\n                \"_DEBUG\",\r\n                \"UNICODE\",\r\n                \"_UNICODE\"\r\n            ],\r\n            \"cStandard\": \"c11\",\r\n            \"cppStandard\": \"c++17\",\r\n            \"intelliSenseMode\": \"msvc-x64\"\r\n        }\r\n    ],\r\n    \"version\": 4\r\n}\r\n```\r\n\r\n\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49813"}, {"body": "You would need to install the live share extension on vscode insiders.\r\n- Open a C# o Node project (or any project you would like)\r\n- Start a debug session with a breakpoint\r\n- Hit breakpoint once and then select restart\r\n- So far so good you would hit second time and press restart\r\n- Then an error happen on our debug adapter since there is a missing expected property that is expected\r\n\r\nI put breakpoints on our side and the first restart did invoke again our debug configuration provider but not the second restart.\r\nI even start our debugger on port 4711 (and configure our provider to use that port).\r\nThe normal start and first restart hit my server and accept sessions.\r\nThe second restart did not hit my server and attempt a direct launch of the debug adapter with missing information on the launch configuration.\r\n\r\nfyi @rodrigovaras", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49810"}, {"body": "Hi, Team,\r\n\r\nI'm using the latest VSCode at the moment - 1.23.1 - but have noticed the below problem for some time.\r\n\r\nI have a couple of extensions with **\"extensions.autoUpdate\": true** - and I believe there is a problem that has to do with **C# for Visual Studio Code (powered by OmniSharp)** extension. Every now and then, the extension seems to get updated, which results in several dependencies getting downloaded, as seen in the Output panel. Once the process is done, however, the **\"Installing packages...\"** message in the Status Bar **does not clear**. It is necessary to restart VSCode before it is gone. \r\n\r\nSample screenshot:\r\n\r\n![screenshot](https://user-images.githubusercontent.com/5932031/39983421-57a3992e-5760-11e8-8eb0-bf8bd2339ba5.png)\r\n\r\n\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49809"}, {"body": "Issue Type: <b>Bug</b>\r\n\r\nWhen hovering over a url you are promoted to Ctrl + click to follow link\r\n\r\nFragment gets part of the URL gets encoded incorrectly \r\n\r\nExample url:\r\n\r\n```text\r\nhttp://localhost:3000/#/foo?bar=baz\r\n```\r\nTurns into \r\n```text\r\nhttp://localhost:3000/#/foo%3Fbar=baz\r\n```\r\n\r\nNote that the `?` is turned into `%3F` \r\nThis also happens when all extensions are disabled.\r\n\r\nVS Code version: Code 1.23.0 (7c7da59c2333a1306c41e6e7b68d7f0caa7b3d45, 2018-05-03T16:44:10.813Z)\r\nOS version: Windows_NT ia32 10.0.10240\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Xeon(R) CPU E5-1620 v3 @ 3.50GHz (8 x 3492)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: unavailable_software<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: unavailable_software<br>webgl: enabled<br>webgl2: enabled|\r\n|Memory (System)|15.92GB (3.83GB free)|\r\n|Process Argv|C:\\Program Files (x86)\\Microsoft VS Code\\Code.exe|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details>\r\n<!-- generated by issue reporter -->\r\n<!-- then copied/pasted from 49628 because someone closed it prematurely  -->", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49808"}, {"body": "Issue Type: <b>Feature Request</b>\r\n\r\nWe already have CSS intellisense in the `<style>` tag in HTML file.\r\nI'd like to request it for Markdown file too.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49805"}, {"body": "python 2.7.13\uff0c Automatic code completion is unresponsive!\r\npython 3.6.5 is OK!", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49803"}, {"body": "<!--\r\nDo you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode.\r\n\r\nFor bug reports, please fill in the details below. For feature requests, please describe the desired feature.\r\n-->\r\n\r\n<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version:1.23\r\n- OS Version:windows 7\r\n\r\nSteps to Reproduce:\r\n\r\n1.set markdown.json\r\n```json\r\n{\r\n\t\"h1\": {\r\n\t\t\"prefix\": \"md::h1\",\r\n\t\t\"body\": [\r\n\t\t\t\"# $1\"\r\n\t\t],\r\n\t\t\"description\":\"h1 title\"\r\n\t},\r\n}\r\n```\r\n2.new a file : test.md\r\ninput `md::` no intellisense\r\n\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: Yes/No\r\nYes", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49802"}, {"body": "- VSCode Version: 1.22.2\r\n- OS Version: Windows 10\r\n\r\nSteps to Reproduce:\r\n\r\n1. Open a project in Visual Studio Code\r\n2. Open Task Manager, because it's going to be hard to do later\r\n3. Change your time in Windows 10 Date/Time settings\r\n\r\nVisual Studio Code should now be using excessive CPU. Windows may freeze up. I think that this may depend on which files are open, or how long VSCode has been running - but these are just guesses.\r\n\r\nDoes this issue occur when all extensions are disabled?: Yes", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49800"}, {"body": "<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version: 1.23.1\r\n- OS Version: High Sierra 10.13.4\r\n\r\nSteps to Reproduce:\r\n\r\n1. Create simple java and configure the launch.json\r\n     {\r\n            \"type\": \"java\",\r\n            \"name\": \"Debug (Launch)-Main\",\r\n            \"request\": \"launch\",\r\n            \"cwd\": \"${workspaceFolder}\",\r\n            \"console\": \"internalConsole\",\r\n            \"stopOnEntry\": false,\r\n            \"mainClass\": \"Main\",\r\n            \"args\": \"\"\r\n        },\r\n2. run task\r\n3. create multi-root-workspace\r\n4. add the directory(step1.)\r\n5. run task\r\n6. error come out \"java.lang.ClassNotFoundException: ....\"\r\n\r\n\r\nit needs java extension pack.\r\nI use vscjava-vscode-pack\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: Yes/No\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49799"}, {"body": "- VSCode Version: 1.23.1\r\n- OS Version: Windows 10 16299.371\r\n\r\nSteps to Reproduce:\r\n\r\n1. Create a tasks.json with arguments containing a semi-colon (see below, testing with `echo`).\r\n2. Run the task\r\n3. Note that nothing is echoed after the semi-colon, mid argument.\r\n\r\nIf you remove the semicolon it works as expected.\r\n\r\n```\r\n{\r\n    \"version\": \"2.0.0\",\r\n    \"tasks\": [\r\n        {\r\n            \"label\": \"build\",\r\n            \"type\": \"shell\",\r\n            \"command\": \"echo\",\r\n            \"args\": [\r\n                \"-cp\",\r\n                \"lib\\\\SpaceBattle.jar;lib\\\\gson-2.2.jar\",\r\n                \"src\\\\${fileBasename}\"\r\n            ], \r\n      }]\r\n}\r\n```\r\n\r\nOutput:\r\n```\r\n-cp\r\nlib\\SpaceBattle.jar\r\n```\r\n\r\nIf you remove the semi-colon, then you get this:\r\n\r\n```\r\n-cp\r\nlib\\SpaceBattle.jarlib\\gson-2.2.jar\r\nsrc\\AvoidingShip.java\r\n```\r\n\r\nI would expect this output when I have the semi-colon:\r\n```\r\n-cp\r\nlib\\SpaceBattle.jar;lib\\gson-2.2.jar\r\nsrc\\AvoidingShip.java\r\n```", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49798"}, {"body": "<!--\r\nDo you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode.\r\n\r\nFor bug reports, please fill in the details below. For feature requests, please describe the desired feature.\r\n-->\r\n\r\n<!-- Use Help > Report Issue to prefill these. -->\r\nVersion 1.23.1\r\nCommit d0182c3417d225529c6d5ad24b7572815d0de9ac\r\nDate 2018-05-10T17:11:17.614Z\r\nShell 1.7.12\r\nRenderer 58.0.3029.110\r\nNode 7.9.0\r\nArchitecture x64\r\n\r\nSteps to Reproduce:\r\n\r\n1.Will VSCode upload my settings.json file ?\r\n\r\nref: https://code.visualstudio.com/blogs/2018/04/25/bing-settings-search\r\n\r\n\r\n\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49797"}, {"body": "First of all I know the VS Code team has done visible efforts to make this terminal render real fast using canvas and many clever techniques.\r\n\r\nThis super fast and pretty colorized, terminal surrounded by the code editor **feels a bit cluttered**, \r\nI have felt the need to pull it out on a separate window (_and this is in a separate ticket_). \r\nAlso, I think this terminal beats many of the efforts in performance other Electron terminal apps have tried and failed before. (Hyper.is).\r\n\r\nIn windows, I have found the misfortune to open Powershell ugly colors blue screen and 1995 options and bare customizations, because of it's power. \r\nThe terminal in this software is \r\n - **unbeatable in user control and comfort**, \r\n - you can copy paste normally since it's inception, \r\n - click links, \r\n - and well it handles the many terminal options (bash, ubuntu, powershell, cmd) available in windows in **one friendly place**, \r\n - it renders all under the same consistent color theme, \r\n - can change font size with obvious commands (very useful for demos), \r\n - etc.\r\nBranching this into another app could also open the possibility to add new features from that fork to both environments, inside VSCode and as Terminal as a standalone. \r\n\r\nIs anyone in this with me on this one, aren't CMD and Powershell slightly stuck in the past and contrived by UX concerns from two decades ago? and feel like a drag to have them separate?.\r\n\r\nWouldn't it be a fantastic addition to the Windows (mostly) or Mac development environment?\r\n:)", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49795"}, {"body": "I'm running into a problem where code seems to be removing an \"unused\" import that's actually being used. This happens whenever I save.\r\n\r\n![import](https://user-images.githubusercontent.com/9385814/39972393-90826420-56dc-11e8-837f-200857580f82.gif)\r\n\r\nIn my case, it's removing `h` import on save, which is required for once the JSX is compiled, but not used explicitly in my file.\r\n\r\nIs this a bug or a setting I can turn off?\r\n\r\nI'm running \r\n\r\nCode Version 1.23.1 (1.23.1)\r\n\r\non Mac OS 10.13.4 \r\n\r\nSteps to Reproduce:\r\n\r\nTry saving this code with the `preact` npm package installed. The `h` import is removed for me, even though it is used after compilation.\r\n\r\n```js\r\nimport { render, h } from \"preact\";\r\n\r\nrender(<p>Hello World!</p>, document.querySelector(\"#root\"));\r\n```\r\n\r\nThanks!", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49794"}, {"body": "<!--\r\nDo you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode.\r\n\r\nFor bug reports, please fill in the details below. For feature requests, please describe the desired feature.\r\n-->\r\n\r\n<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version: 1.23.1\r\n- OS Version: Ubuntu 18.04 || Fedora 28 Workstation\r\n\r\nSteps to Reproduce: Create a Linux based VM. It can either be Debian based or Fedora\r\n\r\n1. Download VSCode for Linux (deb || rpm)\r\n2. Launch VSCode\r\n3. Open a Terminal and check the stack permissions for each VSCode process.\r\n3a. Command: `for i in $(pidof code); do cat /proc/$i/maps | grep stack; done` \r\n4. Command from 3a should show that each process has an executable stack. Replacing the word \"stack\" with \"rwxp\" will show all of the Read,Write,eXecute mappings VScode has performed. There are > 100 RXW pages which is odd for modern desktop application.\r\n\r\nVSCode running with Executable Stacks\r\n```\r\n[a@localhost ~]$ for i in $(pidof code); do cat /proc/$i/maps | grep stack; done\r\n7ffd94abc000-7ffd94ade000 rwxp 00000000 00:00 0                          [stack]\r\n7ffcff029000-7ffcff04b000 rwxp 00000000 00:00 0                          [stack]\r\n7ffcff029000-7ffcff04b000 rwxp 00000000 00:00 0                          [stack]\r\n7ffda0307000-7ffda0329000 rwxp 00000000 00:00 0                          [stack]\r\n7ffcff029000-7ffcff04b000 rwxp 00000000 00:00 0                          [stack]\r\n7fffdbd34000-7fffdbd56000 rwxp 00000000 00:00 0                          [stack]\r\n```\r\n\r\nRough estimate of how many RWX allocations there are within each VSCode process.\r\n```\r\n[a@localhost ~]$ for i in `pidof code`; do cat /proc/$i/maps | grep rwxp| wc -l; done\r\n197\r\n264\r\n418\r\n154\r\n120\r\n247\r\n```\r\n\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: Yes\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49793"}, {"body": "Not able to rename a folder back\r\n![renaming_folder](https://user-images.githubusercontent.com/5207331/39969501-091f92b4-56fa-11e8-8162-ea7ae1781b8e.gif)\r\n\r\nThis happens only with folders and not with files.\r\n\r\n<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version: 1.21.3\r\n- OS Version: macOS High Sierra 10.13.4\r\n\r\nSteps to Reproduce:\r\n\r\n1. create a folder `test`\r\n2. rename it to `tests`\r\n3. try renaming it back to `test`\r\n\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: No!\r\nI had 22 extensions enabled. I thought to help debug this issue faster I could try disabling each plugin until this issue does not happen. Sadly even after disabling each plugin and after restarting the app, the issue is still there.\r\n\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49792"}, {"body": "Fixes #49495", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49790"}, {"body": "Sorry to ask this here. If you prefer Stack Overflow for this type of question I can do that next time.\r\n\r\nI know VSCode [pulls in PowerShell's Editor Syntax](https://github.com/Microsoft/vscode/blob/master/extensions/powershell/package.json#L27) from our [Editor Syntax](https://github.com/powershell/EditorSyntax) repo.\r\n\r\nI was wondering how often updates to this get pulled in? We've merged in a few changes these past few weeks and haven't seen any updates in VSCode yet.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49789"}, {"body": "<!--\r\nDo you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode.\r\n\r\nFor bug reports, please fill in the details below. For feature requests, please describe the desired feature.\r\n-->\r\n\r\n<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version: v1.23.1\r\n- OS Version: OSX 10.13.4\r\n\r\n**Issue**\r\nMost ESLint Shared Configs (ex. [AirBnB](https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb), [StandardJS](https://github.com/standard/eslint-config-standard)) use \"error\" as their default rule severity. I use large eslint-config's through [vscode-eslint](https://github.com/Microsoft/vscode-eslint/issues/46) and prefer to have all of my ESLint Problems (VSCode's \"Problems\" Window under View menu) show up as warnings since they are almost all style-related. This allows me to keep all of my _actual_ error Problems (i.e. syntax errors) separate from my style Problems. Currently I have to find and replace all \"error\" with \"warn\" in my eslint-config's or maintain massive .eslintrc files to override all the \"error\"'s.\r\n\r\n**Proposed Solution**\r\nAdd a \"Global/Maximum Problem Level\" option in VSCode Settings that overrides all Problem levels for a particular linter or extension that produces Problem output.\r\n\r\n**Related Issue**\r\nI wasn't sure which repo was more relevant to this issue so I also posted in [vscode-eslint](https://github.com/Microsoft/vscode-eslint/issues/468)'s repo.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49788"}, {"body": "Can be configured through preferences:\r\n\r\n\"[Log]\": {\r\n  \"editor.wordWrap\": \"on|off|bounded|wordWrapColumn\"\r\n}\r\n\r\nFixes #21468.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49787"}, {"body": "After Updating the vscode new version, I installed a python extension, then it will giving me an error continuously\r\n![screenshot 46](https://user-images.githubusercontent.com/25482370/39968334-ccebde62-56e8-11e8-9cc7-211b9661f7c3.png)\r\n\r\n![screenshot 47](https://user-images.githubusercontent.com/25482370/39968337-d8efc8d6-56e8-11e8-88a8-54be3103f131.png)\r\n\r\nit is not an issue for the coding but it is a drag\r\n", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49786"}, {"body": "I was considering to use another extension to structure my import statements into columns such as the following:\r\n```typescript\r\nimport {    Commandlet   } from \"@cli/Framework/Commandlet\" ;\r\nimport {    Manifest     } from \"@cli/Framework/Manifest\"   ;\r\nimport {    PackageJson  } from \"@cli/Framework/PackageJson\";\r\nimport {    VerbsData    } from \"@cli/Framework/VerbsData\"  ;\r\nimport {    IPackage     } from \"@cli/Schemas/IPackage\"     ;\r\nimport {    IPackageJson } from \"@cli/Schemas/IPackageJson\" ;\r\nimport * as fs             from \"fs\"                        ;\r\nimport * as path           from \"path\"                      ;\r\n```\r\nUnfortunately though, running the VSCode formatter (either manually or automatically when saving) sanitizes the number of spaces and yields the following more usual output:\r\n```typescript\r\nimport { Commandlet } from \"@cli/Framework/Commandlet\";\r\nimport { Manifest } from \"@cli/Framework/Manifest\";\r\nimport { PackageJson } from \"@cli/Framework/PackageJson\";\r\nimport { VerbsData } from \"@cli/Framework/VerbsData\";\r\nimport { IPackage } from \"@cli/Schemas/IPackage\";\r\nimport { IPackageJson } from \"@cli/Schemas/IPackageJson\";\r\nimport * as fs from \"fs\";\r\nimport * as path from \"path\";\r\n```\r\nI'd like to know whether there is any option available or feature planned to configure the fomatter s.t. it does not format my customized imports or other configurable sections.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49782"}, {"body": "<!--\r\nDo you have a question? Please ask it on https://stackoverflow.com/questions/tagged/vscode.\r\n\r\nFor bug reports, please fill in the details below. For feature requests, please describe the desired feature.\r\n-->\r\n\r\n<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version: 1.23.1\r\n\r\nThe `TreeView.reveal` function for extension authors always reveal the node in the container but also the container in vscode.\r\n\r\nI would suggest something like :\r\n\r\n```ts\r\nreveal(element: T, options?: { select?: boolean, revealContainer?: boolean }): Thenable<void>;\r\n```\r\n\r\nTo simulate `explorer.autoReveal` in an extension a new option would be needed to avoid this as the explorer treeview doesn't do that: Navigating between files select the corresponding node but doesn't switch activity to the explorer one or expand the explorer view if it is currently collapsed.", "uri": "https://api.github.com/repos/Microsoft/vscode/issues/49779"}]